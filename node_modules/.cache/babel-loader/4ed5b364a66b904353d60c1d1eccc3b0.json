{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n\n    this.post = () => {\n      React.createElement(Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.get().then(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data();\n        return {\n          title: post.title,\n          body: post.body,\n          name: post.name,\n          pic: post.photoURL || '/images/profile_placeholder.png',\n          course: post.course,\n          nickname: post.nickname,\n          favcount: post.favcount,\n          librarycount: post.librarycount,\n          timestamp: post.timestamp\n        };\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.posts.map(post => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, post.title, post.body, post.name, post.pic, post.course, post.nickname, post.favcount, post.librarycount, post.timestamp.toString());\n    }), React.createElement(\"button\", {\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\"));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/index.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","Index","Component","constructor","post","state","posts","componentDidMount","postsref","collection","orderBy","get","then","snapshot","docs","map","postdoc","data","title","body","name","pic","photoURL","course","nickname","favcount","librarycount","timestamp","setState","render","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0DAAP;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,kBAA3C;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,GAAE;AACT;;AADS,SAyCbC,IAzCa,GAyCR,MAAI;AACL,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,KA5CY;;AAET,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC;AADC,KAAX;AAGH;;AAELC,EAAAA,iBAAiB,GAAE;AAGX,UAAMC,QAAQ,GAAGZ,EAAE,CAACa,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B,WAA/B,EAA4C,MAA5C,CAAjB;AACAF,IAAAA,QAAQ,CAACG,GAAT,GAAeC,IAAf,CAAqBC,QAAD,IAAc;AAC9B,YAAMP,KAAK,GAAGO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAoBC,OAAD,IAAY;AAExC,cAAMZ,IAAI,GAAGY,OAAO,CAACC,IAAR,EAAb;AAGD,eAAO;AACHC,UAAAA,KAAK,EAACd,IAAI,CAACc,KADR;AAEHC,UAAAA,IAAI,EAACf,IAAI,CAACe,IAFP;AAGHC,UAAAA,IAAI,EAAChB,IAAI,CAACgB,IAHP;AAIHC,UAAAA,GAAG,EAACjB,IAAI,CAACkB,QAAL,IAAiB,iCAJlB;AAKHC,UAAAA,MAAM,EAACnB,IAAI,CAACmB,MALT;AAMHC,UAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QANZ;AAOHC,UAAAA,QAAQ,EAAErB,IAAI,CAACqB,QAPZ;AAQHC,UAAAA,YAAY,EAAEtB,IAAI,CAACsB,YARhB;AASHC,UAAAA,SAAS,EAAEvB,IAAI,CAACuB;AATb,SAAP;AAaH,OAlBa,CAAd;AAmBA,WAAKC,QAAL,CAAc;AACVtB,QAAAA,KAAK,EAAGA;AADE,OAAd;AAIH,KAxBD;AA4BH;;AASDuB,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAES,KAAKxB,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAsBX,IAAD,IAAU;AAC5B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACc,KADV,EAEKd,IAAI,CAACe,IAFV,EAGKf,IAAI,CAACgB,IAHV,EAIKhB,IAAI,CAACiB,GAJV,EAKKjB,IAAI,CAACmB,MALV,EAMKnB,IAAI,CAACoB,QANV,EAOKpB,IAAI,CAACqB,QAPV,EAQKrB,IAAI,CAACsB,YARV,EASKtB,IAAI,CAACuB,SAAL,CAAeG,QAAf,EATL,CADJ;AAcH,KAfA,CAFT,EAoBK;AAAQ,MAAA,OAAO,EAAE,KAAK1B,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCApBL,CADJ;AAwBH;;AA3E8B;;AA+EnC,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\n\nclass Index extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            posts:[]\n        }\n    }\n\ncomponentDidMount(){\n\n        \n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.get().then((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                 const post = postdoc.data();\n                \n                \n                return {\n                    title:post.title,\n                    body:post.body,\n                    name:post.name,\n                    pic:post.photoURL || '/images/profile_placeholder.png',\n                    course:post.course,\n                    nickname: post.nickname,\n                    favcount: post.favcount,\n                    librarycount: post.librarycount,\n                    timestamp: post.timestamp,\n                    \n                }   \n               \n            })\n            this.setState({\n                posts : posts\n            })\n           \n        });\n\n\n\n    }\n\n    post=()=>{\n        <Post/>\n\n    }\n\n   \n\n    render(){\n        \n        return(\n            <div>\n                {\n                     this.state.posts.map((post) => { \n                        return ( \n                            <div>\n                                {post.title}\n                                {post.body}\n                                {post.name}\n                                {post.pic}\n                                {post.course}\n                                {post.nickname}\n                                {post.favcount}\n                                {post.librarycount}\n                                {post.timestamp.toString()}\n                            </div>\n                        )\n\n                    })\n                    \n                }\n                 <button onClick={this.post}>投稿する</button>\n            </div>\n        );\n    }\n    \n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}