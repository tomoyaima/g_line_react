{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      index: true,\n      pic: \"\",\n      name: \"\",\n      body: \"\",\n      title: \"\",\n      fav: \"\",\n      lib: \"\",\n      plf: \"\",\n      course: \"\" // const postdb = db.collection(\"posts\").doc();\n      // postdb.get().then((postdb)=>{\n      // this.setState({\n      // name : postdb.data().nickname,\n      // body:postdb.data().body,\n      // title:postdb.data().title,\n      // fav:postdb.data().favcount,\n      // lib:postdb.data().librarycount,\n      // plf:postdb.data().pic,\n      // course: userdb.data().course\n      // })\n\n    };\n  }\n\n  componentDidMount() {\n    const userdb = db.collection(\"posts\");\n    userdb.get().then(querySnapshot => {\n      querySnapshot.forEach(userdb => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(userdb.id, \" => \", userdb.data());\n        this.setState({\n          post_id: db.collection(\"posts\").doc(),\n          name: userdb.data().name,\n          pic: userdb.data().photoURL || '/images/profile_placeholder.png',\n          email: userdb.data().email,\n          course: userdb.data().course,\n          nickname: userdb.data().nickname,\n          body: this.state.body,\n          title: this.state.title,\n          favcount: 0,\n          librarycount: 0,\n          index: true\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.body, this.state.favcount, this.state.course, this.state.title);\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/index.js"],"names":["React","Post","db","firebase","Index","Component","constructor","state","index","pic","name","body","title","fav","lib","plf","course","componentDidMount","userdb","collection","get","then","querySnapshot","forEach","console","log","id","data","setState","post_id","doc","photoURL","email","nickname","favcount","librarycount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0DAAP;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACXC,MAAAA,KAAK,EAAC,IADK;AAEXC,MAAAA,GAAG,EAAC,EAFO;AAGXC,MAAAA,IAAI,EAAG,EAHI;AAIXC,MAAAA,IAAI,EAAC,EAJM;AAKXC,MAAAA,KAAK,EAAC,EALK;AAMXC,MAAAA,GAAG,EAAC,EANO;AAOXC,MAAAA,GAAG,EAAC,EAPO;AAQXC,MAAAA,GAAG,EAAC,EARO;AASXC,MAAAA,MAAM,EAAE,EATG,CAYX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAvBW,KAAX;AA4BH;;AACLC,EAAAA,iBAAiB,GAAE;AAGX,UAAMC,MAAM,GAAGhB,EAAE,CAACiB,UAAH,CAAc,OAAd,CAAf;AACAD,IAAAA,MAAM,CAACE,GAAP,GAAaC,IAAb,CAAmBC,aAAD,IAAmB;AAACA,MAAAA,aAAa,CAACC,OAAd,CAAuBL,MAAD,IAAW;AACnE;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,EAAnB,EAAuB,MAAvB,EAA+BR,MAAM,CAACS,IAAP,EAA/B;AAGR,aAAKC,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAG3B,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBW,GAAvB,EADA;AAEVpB,UAAAA,IAAI,EAAEQ,MAAM,CAACS,IAAP,GAAcjB,IAFV;AAGVD,UAAAA,GAAG,EAAES,MAAM,CAACS,IAAP,GAAcI,QAAd,IAA0B,iCAHrB;AAIVC,UAAAA,KAAK,EAAEd,MAAM,CAACS,IAAP,GAAcK,KAJX;AAKVhB,UAAAA,MAAM,EAAEE,MAAM,CAACS,IAAP,GAAcX,MALZ;AAMViB,UAAAA,QAAQ,EAAEf,MAAM,CAACS,IAAP,GAAcM,QANd;AAOVtB,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAPP;AAQVC,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KARR;AASVsB,UAAAA,QAAQ,EAAE,CATA;AAUVC,UAAAA,YAAY,EAAE,CAVJ;AAWV3B,UAAAA,KAAK,EAAG;AAXE,SAAd;AAaH,OAlB6C;AAmB7C,KAnBO;AAoBP;;AAGG4B,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK7B,KAAL,CAAWI,IADhB,EAEK,KAAKJ,KAAL,CAAW2B,QAFhB,EAGK,KAAK3B,KAAL,CAAWS,MAHhB,EAIK,KAAKT,KAAL,CAAWK,KAJhB,CADJ;AAQH;;AArE8B;;AAwEnC,eAAeR,KAAf","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\n\nclass Index extends React.Component{\n    constructor(){\n        super()\n        this.state={\n        index:true,\n        pic:\"\",\n        name : \"\",\n        body:\"\",\n        title:\"\",\n        fav:\"\",\n        lib:\"\",\n        plf:\"\",\n        course: \"\"\n\n        }\n        // const postdb = db.collection(\"posts\").doc();\n        // postdb.get().then((postdb)=>{\n        // this.setState({\n        // name : postdb.data().nickname,\n        // body:postdb.data().body,\n        // title:postdb.data().title,\n        // fav:postdb.data().favcount,\n        // lib:postdb.data().librarycount,\n        // plf:postdb.data().pic,\n        // course: userdb.data().course\n\n        // })\n\n\n        \n\n    }\ncomponentDidMount(){\n\n        \n        const userdb = db.collection(\"posts\")\n        userdb.get().then((querySnapshot) => {querySnapshot.forEach((userdb) =>{\n            // doc.data() is never undefined for query doc snapshots\n            console.log(userdb.id, \" => \", userdb.data());\n       \n\n    this.setState({\n        post_id : db.collection(\"posts\").doc(),\n        name: userdb.data().name,\n        pic: userdb.data().photoURL || '/images/profile_placeholder.png',\n        email: userdb.data().email,\n        course: userdb.data().course,\n        nickname: userdb.data().nickname,\n        body: this.state.body,\n        title: this.state.title,\n        favcount: 0,\n        librarycount: 0,\n        index : true\n    })\n});\n});\n}\n   \n\n    render(){\n        \n        return(\n            <div>\n                {this.state.body}\n                {this.state.favcount}\n                {this.state.course}\n                {this.state.title}\n            </div>\n        );\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}