{"ast":null,"code":"import _objectSpread from \"/Users/imatomo/Desktop/gline-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Detail.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport Posts from \"./Posts\";\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileSelect = e => {\n      const files = e.target.files;\n      Array.prototype.forEach.call(files, file => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n          this.setState(state => {\n            state.postimageurls.push(reader.result);\n            state.files.push(file);\n            return state;\n          });\n        });\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      });\n    };\n\n    this.state = {\n      post: [],\n      text: \"\",\n      postimageurls: [],\n      responses: []\n    };\n    this.handleInputtext = this.handleInputText.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleInputText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  componentWillMount() {\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.limit(20).onSnapshot(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data(); //  console.log(post);\n\n        if (post.postimageurl != []) {\n          const pathref = storage.ref().child(\"images/\".concat(post.postimageurl));\n          pathref.getDownloadURL().then(url => {\n            this.setState(state => {\n              const index = state.posts.findIndex(post => {\n                return post.id === postdoc.id;\n              });\n              state.posts[index].postimageurl.push(url);\n              return state;\n            });\n          });\n        }\n\n        return _objectSpread({}, post, {\n          id: postdoc.id\n        });\n      });\n      console.log(posts);\n      const uid = this.props.match.params.id;\n      const post = posts.find(posts => {\n        return posts.id === uid;\n      });\n      this.setState({\n        post: post\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.user && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.post.title, this.state.post.body, this.state.post.name, this.state.post.pictureurl, this.state.post.course, this.state.post.nickname, this.state.post.favcount, this.state.post.librarycount, React.createElement(\"div\", {\n      className: \"posttitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.answer.title,\n      onChange: this.handleInputtitle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileSelect.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), this.state.postimageurls.map((imageurl, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    })), React.createElement(\"button\", {\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u8CEA\\u554F\\u3092\\u6295\\u7A3F\\u3059\\u308B\"))));\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Detail.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Posts","Detail","Component","constructor","props","handleFileSelect","e","files","target","Array","prototype","forEach","call","file","reader","FileReader","addEventListener","setState","state","postimageurls","push","result","readAsDataURL","post","text","responses","handleInputtext","handleInputText","bind","event","value","componentWillMount","postsref","collection","orderBy","limit","onSnapshot","snapshot","posts","docs","map","postdoc","data","postimageurl","pathref","ref","child","getDownloadURL","then","url","index","findIndex","id","console","log","uid","match","params","find","render","user","title","body","name","pictureurl","course","nickname","favcount","librarycount","answer","handleInputtitle","imageurl","i","save"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\nimport Posts from \"./Posts\";\n\nclass Detail extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n           post:[],\n           text : \"\",\n           postimageurls:[],\n           responses:[\n          \n           ]\n           \n        }\n        this.handleInputtext = this.handleInputText.bind(this);\n        \n        this.handleFileSelect = this.handleFileSelect.bind(this);\n    }\n\n    handleInputText(event) {\n        this.setState({\n\n            text: event.target.value\n        })\n    }\n\n\n    handleFileSelect = (e) => {\n        const files = e.target.files\n        Array.prototype.forEach.call(files,(file) => {\n            const reader = new FileReader()\n            reader.addEventListener(\"load\",()=>{\n                this.setState((state)=>{\n                    state.postimageurls.push(reader.result)\n                    state.files.push(file)\n                    return state\n                })\n\n             })\n            if(file){\n                reader.readAsDataURL(file)\n            }\n        });\n        \n    }\n\n    componentWillMount(){\n\n        \n\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.limit(20).onSnapshot((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                const post = postdoc.data();\n                    //  console.log(post);\n                if(post.postimageurl!=[]){\n                    const pathref = storage.ref().child(`images/${post.postimageurl}`)\n                    pathref.getDownloadURL().then((url)=>{ \n\n                        this.setState((state)=>{\n                            const index =  state.posts.findIndex((post)=>{\n                                return post.id === postdoc.id;\n                            })\n                            state.posts[index].postimageurl.push(url)\n\n\n                            \n                            return state\n                        })\n                    })\n\n                    \n                }\n                return {...post,id:postdoc.id}\n                \n               \n            })\n            console.log(posts)\n            const uid =this.props.match.params.id\n            const post= posts.find((posts) => {return (posts.id === uid);})\n            this.setState({\n                post:post\n            })\n           \n        });\n       \n    \n    }\n   \n\n    render(){\n        \n        return(\n            <div>\n\n                {this.props.user&&\n                     \n                    \n                          <div>\n                                {this.state.post.title}\n                                {this.state.post.body}\n                                {this.state.post.name}\n                                {this.state.post.pictureurl}\n                               \n                                {this.state.post.course}\n                                {this.state.post.nickname}\n                                {this.state.post.favcount}\n                                {this.state.post.librarycount}\n                                \n                           \n                            <div className=\"posttitle\">タイトルを入力:\n                            <input type='text' value={this.answer.title} onChange={this.handleInputtitle.bind(this)} />\n                        </div>\n                       \n                        <div className=\"file-field input-field\">\n                            <div className=\"btn\">\n                                <span>File</span>\n                                <input type=\"file\" onChange={this.handleFileSelect.bind(this)} multiple />\n                            </div>\n                            <div className=\"file-path-wrapper\">\n                                <input className=\"file-path validate\" type=\"text\"/>\n                            </div>\n                            {\n                                this.state.postimageurls.map((imageurl,i)=>{\n                                    return (\n                                    <div key={i}>\n                                        <img src={imageurl}></img>\n                                    </div>\n                                    )\n                                })\n                            }\n                        </div>\n                      \n                                                    <button onClick={this.save}  ><Link to='/posts'>質問を投稿する</Link></button>\n\n                            </div>\n                   \n                }\n            \n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Detail\n"]},"metadata":{},"sourceType":"module"}