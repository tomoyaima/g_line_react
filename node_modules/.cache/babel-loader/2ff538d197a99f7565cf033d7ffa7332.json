{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Post.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { storage } from '../firebase';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileSelect = e => {\n      const files = e.target.files;\n      Array.prototype.forEach.call(files, file => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n          this.setState(state => {\n            state.postimageurls.push(reader.result);\n            state.files.push(file);\n            return state;\n          });\n        });\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      });\n    };\n\n    this.save = e => {\n      if (this.state.files != []) {\n        e.preventDefault();\n        this.state.files.forEach(file => {\n          storage.ref().child(\"\".concat(file.name)).put(file).then(snap => {\n            console.log('Uploaded a blob or file!');\n          });\n        });\n      }\n\n      let id = 0;\n      let post_id = String(id);\n      const user = firebase.auth().currentUser;\n      const userdb = db.collection(\"users\").doc(user.uid);\n      userdb.get().then(userdb => {\n        if (userdb.exists) {\n          console.log(\"Document data:\", userdb.data());\n\n          if (this.state.files == null) {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postimageurl: []\n            }).then(() => {\n              this.setState({\n                post_id: db.collection(\"posts\").doc(),\n                name: userdb.data().name,\n                pic: userdb.data().pic,\n                email: userdb.data().email,\n                course: userdb.data().course,\n                nickname: userdb.data().nickname,\n                body: this.state.body,\n                title: this.state.title,\n                favcount: 0,\n                librarycount: 0,\n                timestamp: new Date(),\n                index: true\n              });\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n              this.props.changepost();\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          } else {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postimageurl: this.state.postimageurls\n            }).then(() => {\n              // this.setState({\n              //     post_id : db.collection(\"posts\").doc(),\n              //     name: userdb.data().name,\n              //     pic: userdb.data().pic,\n              //     email: userdb.data().email,\n              //     course: userdb.data().course,\n              //     nickname: userdb.data().nickname,\n              //     body: this.state.body,\n              //     title: this.state.title,\n              //     favcount: 0,\n              //     librarycount: 0,\n              //     timestamp: new Date(),\n              //     index : true\n              // })\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n              this.props.changepost();\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          }\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"\\u53D6\\u5F97\\u5931\\u6557 (\".concat(error, \")\"));\n      });\n    };\n\n    this.state = {\n      body: \"\",\n      title: \"\",\n      favcount: 0,\n      librarycount: 0,\n      answered: false,\n      timestamp: null,\n      files: [],\n      postimageurls: []\n    };\n    this.save = this.save.bind(this);\n    this.handleInputtitle = this.handleInputtitle.bind(this);\n    this.handleInputbody = this.handleInputbody.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleInputtitle(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleInputbody(event) {\n    this.setState({\n      body: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), this.props.user && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\u8CEA\\u554F\\u3092\\u6295\\u7A3F\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.title,\n      onChange: this.handleInputtitle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"postbody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u5185\\u5BB9\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.body,\n      onChange: this.handleInputbody.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileSelect.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), this.state.postimageurls.map((imageurl, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }));\n    })), this.state.title == '' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\") : this.state.body != '' ? React.createElement(\"button\", {\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"\\u8CEA\\u554F\\u3092\\u6295\\u7A3F\\u3059\\u308B\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\")))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"footer-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Post.js"],"names":["React","BrowserRouter","Route","Link","db","firebase","storage","Post","Component","constructor","props","handleFileSelect","e","files","target","Array","prototype","forEach","call","file","reader","FileReader","addEventListener","setState","state","postimageurls","push","result","readAsDataURL","save","preventDefault","ref","child","name","put","then","snap","console","log","id","post_id","String","user","auth","currentUser","userdb","collection","doc","uid","get","exists","data","set","pic","email","course","nickname","body","title","favcount","librarycount","timestamp","Date","answered","postimageurl","index","changepost","catch","error","bind","handleInputtitle","handleInputbody","event","value","render","map","imageurl","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { storage } from '../firebase'\n\n\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            body : \"\",\n            title : \"\",\n            favcount: 0,\n            librarycount: 0,\n            answered:false,\n            timestamp:null,\n            files:[],\n            postimageurls:[]\n            \n\n        }\n\n        this.save = this.save.bind(this);\n        this.handleInputtitle = this.handleInputtitle.bind(this);\n        this.handleInputbody = this.handleInputbody.bind(this);\n        this.handleFileSelect = this.handleFileSelect.bind(this);\n    }\n\n    handleInputtitle(event) {\n        this.setState({\n\n            title: event.target.value\n        })\n    }\n\n    handleInputbody(event) {\n        this.setState({\n            body: event.target.value\n\n        })\n    }\n\n    handleFileSelect = (e) => {\n        const files = e.target.files\n        Array.prototype.forEach.call(files,(file) => {\n            const reader = new FileReader()\n            reader.addEventListener(\"load\",()=>{\n                this.setState((state)=>{\n                    state.postimageurls.push(reader.result)\n                    state.files.push(file)\n                    return state\n                })\n\n             })\n            if(file){\n                reader.readAsDataURL(file)\n            }\n        });\n        \n    }\n\n    \n\n    save = (e) => {\n\n        \n\n       if(this.state.files!=[]){\n            e.preventDefault()\n            this.state.files.forEach((file)=>{\n               \n                storage.ref().child(`${file.name}`).put(file).then(snap => {\n                    console.log('Uploaded a blob or file!');\n                });\n            })\n        }   \n        let id =0;\n        let post_id = String(id)\n        const user = firebase.auth().currentUser\n        const userdb = db.collection(\"users\").doc(user.uid);\n        userdb.get().then((userdb) => {\n            if (userdb.exists) {\n                console.log(\"Document data:\", userdb.data());\n            \n                    if(this.state.files==null){\n                        db.collection(\"posts\").doc().set({\n                            post_id : db.collection(\"posts\").doc(),\n                            name: userdb.data().name,\n                            pic: userdb.data().pic,\n                            email: userdb.data().email,\n                            course: userdb.data().course,\n                            nickname: userdb.data().nickname,\n                            body: this.state.body,\n                            title: this.state.title,\n                            favcount: 0,\n                            librarycount: 0,\n                            timestamp: new Date(),\n                            answered:this.state.answered,\n                            postimageurl:[]\n\n                        })        \n                        .then(() => {\n                            this.setState({\n                                post_id : db.collection(\"posts\").doc(),\n                                name: userdb.data().name,\n                                pic: userdb.data().pic,\n                                email: userdb.data().email,\n                                course: userdb.data().course,\n                                nickname: userdb.data().nickname,\n                                body: this.state.body,\n                                title: this.state.title,\n                                favcount: 0,\n                                librarycount: 0,\n                                timestamp: new Date(),\n                                index : true\n                            })\n                            console.log(`追加に成功しました `);\n                            this.props.changepost()\n                        })\n                        .catch((error) => {\n                            console.log(`追加に失敗しました (${error})`);\n                        });\n                    }else{\n                        db.collection(\"posts\").doc().set({\n                            post_id : db.collection(\"posts\").doc(),\n                            name: userdb.data().name,\n                            pic: userdb.data().pic,\n                            email: userdb.data().email,\n                            course: userdb.data().course,\n                            nickname: userdb.data().nickname,\n                            body: this.state.body,\n                            title: this.state.title,\n                            favcount: 0,\n                            librarycount: 0,\n                            timestamp: new Date(),\n                            answered:this.state.answered,\n                            postimageurl:this.state.postimageurls\n\n                        })        \n                        .then(() => {\n                            // this.setState({\n                            //     post_id : db.collection(\"posts\").doc(),\n                            //     name: userdb.data().name,\n                            //     pic: userdb.data().pic,\n                            //     email: userdb.data().email,\n                            //     course: userdb.data().course,\n                            //     nickname: userdb.data().nickname,\n                            //     body: this.state.body,\n                            //     title: this.state.title,\n                            //     favcount: 0,\n                            //     librarycount: 0,\n                            //     timestamp: new Date(),\n                            //     index : true\n                            // })\n                            console.log(`追加に成功しました `);\n                            this.props.changepost()\n                        })\n                        .catch((error) => {\n                            console.log(`追加に失敗しました (${error})`);\n                        });\n\n\n\n                    }\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n                    \n        })\n        .catch(function(error){\n        console.log(`取得失敗 (${error})`);\n            });\n    }\n         \n       \n   \n\n    render() {\n      \n        return (\n            \n         \n                <div>\n   \n                    <div className=\"main\">\n                        <div className=\"App\">\n                            <p className=\"App-intro\">\n\n                            </p>\n\n\n                        </div>\n                        \n                        {this.props.user&&\n                            <div>\n                              <h4>質問を投稿</h4>\n                             \n                                <form>\n                                    \n                                    <div className=\"posttitle\">タイトルを入力:\n                                        <input type='text' value={this.state.title} onChange={this.handleInputtitle.bind(this)} />\n                                    </div>\n                                    <div className=\"postbody\">投稿内容を入力:\n                                        <input type='text' value={this.state.body} onChange={this.handleInputbody.bind(this)} />\n                                    </div>\n                                    <div className=\"file-field input-field\">\n                                        <div className=\"btn\">\n                                            <span>File</span>\n                                            <input type=\"file\" onChange={this.handleFileSelect.bind(this)} multiple />\n                                        </div>\n                                        <div className=\"file-path-wrapper\">\n                                            <input className=\"file-path validate\" type=\"text\"/>\n                                        </div>\n                                        {\n                                            this.state.postimageurls.map((imageurl,i)=>{\n                                                return (\n                                                <div key={i}>\n                                                    <img src={imageurl}></img>\n                                                </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    \n\n                                    {this.state.title == ''?\n                                        (\n                                            <div>タイトルを入力してください</div>\n                                        ) : (\n                                             this.state.body != ''?\n                                                (\n                                                    <button onClick={this.save}  ><Link to='/posts'>質問を投稿する</Link></button>\n\n                                                ) : (\n                                                    <div>投稿内容を入力してください</div>\n\n                                                )\n                                        )\n                                    }\n\n\n                                </form>\n                               \n                            </div>\n                        \n                           \n                        }\n                        \n                    </div>\n\n                    <footer>\n                        <div className=\"footer-content\">\n\n                        </div>\n                    </footer>\n                </div>\n           \n           \n        );\n    }\n}\n\n\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}