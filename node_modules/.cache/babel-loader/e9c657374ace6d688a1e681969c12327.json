{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/App.js\";\nimport React from 'react';\nimport Login from \"./components/login\";\nimport Index from \"./components/index\";\nimport firebase from './firebase';\nimport { db } from './firebase';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.login = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n      this.setState({\n        isLogging: true\n      });\n    };\n\n    this.logout = () => {\n      firebase.auth().signOut();\n      this.setState({\n        isLogging: false\n      });\n    };\n\n    this.state = {\n      user: null,\n      isLogging: false\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    db.collection(\"user\").doc(\"user_id\").set({\n      name: this.user.displayName,\n      pic: this.user.photoURL || '/images/profile_placeholder.png',\n      email: this.user.email\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Login, {\n      login: this.login,\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Index, {\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/App.js"],"names":["React","Login","Index","firebase","db","App","Component","constructor","login","provider","auth","GoogleAuthProvider","signInWithPopup","setState","isLogging","logout","signOut","state","user","componentDidMount","onAuthStateChanged","collection","doc","set","name","displayName","pic","photoURL","email","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,EAAT,QAAmB,YAAnB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,KApBa,GAoBP,MAAK;AACT,YAAMC,QAAQ,GAAG,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAAjB;AACAR,MAAAA,QAAQ,CAACO,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC;AACA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAC;AAAZ,OAAd;AAED,KAzBY;;AAAA,SA2BbC,MA3Ba,GA2BN,MAAK;AACVZ,MAAAA,QAAQ,CAACO,IAAT,GAAgBM,OAAhB;AACA,WAAKH,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAC;AAAZ,OAAd;AACD,KA9BY;;AAEX,SAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,IADI;AAETJ,MAAAA,SAAS,EAAC;AAFD,KAAb;AAKD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,QAAQ,CAACO,IAAT,GAAgBU,kBAAhB,CAAmCF,IAAI,IAAI;AACzC,WAAKL,QAAL,CAAc;AAAEK,QAAAA;AAAF,OAAd;AACD,KAFD;AAGAd,IAAAA,EAAE,CAACiB,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0B,SAA1B,EAAqCC,GAArC,CAAyC;AACvCC,MAAAA,IAAI,EAAE,KAAKN,IAAL,CAAUO,WADuB;AAEvCC,MAAAA,GAAG,EAAE,KAAKR,IAAL,CAAUS,QAAV,IAAsB,iCAFY;AAGvCC,MAAAA,KAAK,EAAE,KAAKV,IAAL,CAAUU;AAHsB,KAAzC;AAKD;;AAgBDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKrB,KAAnB;AAA2B,MAAA,MAAM,EAAE,KAAKO,MAAxC;AAAgD,MAAA,IAAI,EAAG,KAAKE,KAAL,CAAWC,IAAlE;AAAwE,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWH,SAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKC,MAApB;AAA4B,MAAA,IAAI,EAAG,KAAKE,KAAL,CAAWC,IAA9C;AAAoD,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWH,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AASD;;AA7C+B;;AA+ClC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Login from \"./components/login\";\nimport Index from \"./components/index\";\nimport firebase from './firebase'\nimport { db } from './firebase'\n\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n        user:null,\n        isLogging:false\n    }\n    \n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user })\n    })\n    db.collection(\"user\").doc(\"user_id\").set({\n      name: this.user.displayName,\n      pic: this.user.photoURL || '/images/profile_placeholder.png',\n      email: this.user.email\n    })\n  }\n\n  login=()=> {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    firebase.auth().signInWithPopup(provider)\n    this.setState({ isLogging:true }) \n    \n  }\n\n  logout=()=> {\n    firebase.auth().signOut()\n    this.setState({ isLogging:false }) \n  }\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        \n        <Login login={this.login } logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n        <Index logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n        \n          \n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}