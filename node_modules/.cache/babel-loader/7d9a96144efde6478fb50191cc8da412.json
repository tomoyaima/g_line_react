{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Response.js\";\n//解答の閲覧画面のコンポーネントを編集\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { db } from '../firebase';\n\nclass Response extends React.Component {\n  constructor() {\n    super();\n\n    this.save = e => {\n      if (this.state.files != []) {\n        e.preventDefault();\n        this.state.files.forEach(file => {\n          storage.ref().child(\"images/\".concat(file.name)).put(file).then(snap => {\n            console.log('Uploaded a blob or file!');\n          });\n        });\n      }\n\n      let id = 0;\n      let post_id = String(id);\n      const user = firebase.auth().currentUser;\n      const userdb = db.collection(\"users\").doc(user.uid);\n      userdb.get().then(userdb => {\n        if (userdb.exists) {\n          console.log(\"Document data:\", userdb.data());\n\n          if (this.state.files == null) {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postimageurl: []\n            }).then(() => {\n              this.setState({\n                post_id: db.collection(\"posts\").doc(),\n                name: userdb.data().name,\n                pic: userdb.data().pic,\n                email: userdb.data().email,\n                course: userdb.data().course,\n                nickname: userdb.data().nickname,\n                body: this.state.body,\n                title: this.state.title,\n                favcount: 0,\n                librarycount: 0,\n                timestamp: new Date(),\n                index: true\n              });\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n              this.props.changepost();\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          } else {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postimageurl: this.state.postimageurls\n            }).then(() => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          }\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"\\u53D6\\u5F97\\u5931\\u6557 (\".concat(error, \")\"));\n      });\n    };\n\n    this.handleFileSelect = e => {\n      const files = e.target.files;\n      Array.prototype.forEach.call(files, file => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n          this.setState(state => {\n            state.postimageurls.push(reader.result);\n            state.files.push(file);\n            return state;\n          });\n        });\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      });\n    };\n\n    this.state = {\n      text: \"\",\n      postimageurls: [],\n      responses: []\n    };\n    this.handleInputText = this.handleInputText.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleInputText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\u56DE\\u7B54\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.Text,\n      onChange: this.handleInputText.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileSelect.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), this.state.postimageurls.map((imageurl, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    })), React.createElement(\"button\", {\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"\\u56DE\\u7B54\\u3092\\u6295\\u7A3F\\u3059\\u308B\")));\n  }\n\n}\n\nexport default Response;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Response.js"],"names":["React","BrowserRouter","Route","Link","db","Response","Component","constructor","save","e","state","files","preventDefault","forEach","file","storage","ref","child","name","put","then","snap","console","log","id","post_id","String","user","firebase","auth","currentUser","userdb","collection","doc","uid","get","exists","data","set","pic","email","course","nickname","body","title","favcount","librarycount","timestamp","Date","answered","postimageurl","setState","index","props","changepost","catch","error","postimageurls","handleFileSelect","target","Array","prototype","call","reader","FileReader","addEventListener","push","result","readAsDataURL","text","responses","handleInputText","bind","event","value","render","Text","map","imageurl","i"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0DAAP;AACA,OAAO,aAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,EAAT,QAAmB,aAAnB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAeZC,IAfY,GAeJC,CAAD,IAAO;AAIX,UAAG,KAAKC,KAAL,CAAWC,KAAX,IAAkB,EAArB,EAAwB;AACnBF,QAAAA,CAAC,CAACG,cAAF;AACA,aAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAA0BC,IAAD,IAAQ;AAE7BC,UAAAA,OAAO,CAACC,GAAR,GAAcC,KAAd,kBAA8BH,IAAI,CAACI,IAAnC,GAA2CC,GAA3C,CAA+CL,IAA/C,EAAqDM,IAArD,CAA0DC,IAAI,IAAI;AAC9DC,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,WAFD;AAGH,SALD;AAMH;;AACD,UAAIC,EAAE,GAAE,CAAR;AACA,UAAIC,OAAO,GAAGC,MAAM,CAACF,EAAD,CAApB;AACA,YAAMG,IAAI,GAAGC,QAAQ,CAACC,IAAT,GAAgBC,WAA7B;AACA,YAAMC,MAAM,GAAG3B,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BN,IAAI,CAACO,GAAhC,CAAf;AACAH,MAAAA,MAAM,CAACI,GAAP,GAAaf,IAAb,CAAmBW,MAAD,IAAY;AAC1B,YAAIA,MAAM,CAACK,MAAX,EAAmB;AACfd,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,MAAM,CAACM,IAAP,EAA9B;;AAEI,cAAG,KAAK3B,KAAL,CAAWC,KAAX,IAAkB,IAArB,EAA0B;AACtBP,YAAAA,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BK,GAA7B,CAAiC;AAC7Bb,cAAAA,OAAO,EAAGrB,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,EADmB;AAE7Bf,cAAAA,IAAI,EAAEa,MAAM,CAACM,IAAP,GAAcnB,IAFS;AAG7BqB,cAAAA,GAAG,EAAER,MAAM,CAACM,IAAP,GAAcE,GAHU;AAI7BC,cAAAA,KAAK,EAAET,MAAM,CAACM,IAAP,GAAcG,KAJQ;AAK7BC,cAAAA,MAAM,EAAEV,MAAM,CAACM,IAAP,GAAcI,MALO;AAM7BC,cAAAA,QAAQ,EAAEX,MAAM,CAACM,IAAP,GAAcK,QANK;AAO7BC,cAAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWiC,IAPY;AAQ7BC,cAAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkC,KARW;AAS7BC,cAAAA,QAAQ,EAAE,CATmB;AAU7BC,cAAAA,YAAY,EAAE,CAVe;AAW7BC,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAXkB;AAY7BC,cAAAA,QAAQ,EAAC,KAAKvC,KAAL,CAAWuC,QAZS;AAa7BC,cAAAA,YAAY,EAAC;AAbgB,aAAjC,EAgBC9B,IAhBD,CAgBM,MAAM;AACR,mBAAK+B,QAAL,CAAc;AACV1B,gBAAAA,OAAO,EAAGrB,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,EADA;AAEVf,gBAAAA,IAAI,EAAEa,MAAM,CAACM,IAAP,GAAcnB,IAFV;AAGVqB,gBAAAA,GAAG,EAAER,MAAM,CAACM,IAAP,GAAcE,GAHT;AAIVC,gBAAAA,KAAK,EAAET,MAAM,CAACM,IAAP,GAAcG,KAJX;AAKVC,gBAAAA,MAAM,EAAEV,MAAM,CAACM,IAAP,GAAcI,MALZ;AAMVC,gBAAAA,QAAQ,EAAEX,MAAM,CAACM,IAAP,GAAcK,QANd;AAOVC,gBAAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWiC,IAPP;AAQVC,gBAAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkC,KARR;AASVC,gBAAAA,QAAQ,EAAE,CATA;AAUVC,gBAAAA,YAAY,EAAE,CAVJ;AAWVC,gBAAAA,SAAS,EAAE,IAAIC,IAAJ,EAXD;AAYVI,gBAAAA,KAAK,EAAG;AAZE,eAAd;AAcA9B,cAAAA,OAAO,CAACC,GAAR;AACA,mBAAK8B,KAAL,CAAWC,UAAX;AACH,aAjCD,EAkCCC,KAlCD,CAkCQC,KAAD,IAAW;AACdlC,cAAAA,OAAO,CAACC,GAAR,mEAA0BiC,KAA1B;AACH,aApCD;AAqCH,WAtCD,MAsCK;AACDpD,YAAAA,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BK,GAA7B,CAAiC;AAC7Bb,cAAAA,OAAO,EAAGrB,EAAE,CAAC4B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,EADmB;AAE7Bf,cAAAA,IAAI,EAAEa,MAAM,CAACM,IAAP,GAAcnB,IAFS;AAG7BqB,cAAAA,GAAG,EAAER,MAAM,CAACM,IAAP,GAAcE,GAHU;AAI7BC,cAAAA,KAAK,EAAET,MAAM,CAACM,IAAP,GAAcG,KAJQ;AAK7BC,cAAAA,MAAM,EAAEV,MAAM,CAACM,IAAP,GAAcI,MALO;AAM7BC,cAAAA,QAAQ,EAAEX,MAAM,CAACM,IAAP,GAAcK,QANK;AAO7BC,cAAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWiC,IAPY;AAQ7BC,cAAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkC,KARW;AAS7BC,cAAAA,QAAQ,EAAE,CATmB;AAU7BC,cAAAA,YAAY,EAAE,CAVe;AAW7BC,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAXkB;AAY7BC,cAAAA,QAAQ,EAAC,KAAKvC,KAAL,CAAWuC,QAZS;AAa7BC,cAAAA,YAAY,EAAC,KAAKxC,KAAL,CAAW+C;AAbK,aAAjC,EAgBCrC,IAhBD,CAgBM,MAAM;AAERE,cAAAA,OAAO,CAACC,GAAR;AAEH,aApBD,EAqBCgC,KArBD,CAqBQC,KAAD,IAAW;AACdlC,cAAAA,OAAO,CAACC,GAAR,mEAA0BiC,KAA1B;AACH,aAvBD;AA2BH;AACR,SAtED,MAsEO;AACH;AACAlC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAEJ,OA5ED,EA6ECgC,KA7ED,CA6EO,UAASC,KAAT,EAAe;AACtBlC,QAAAA,OAAO,CAACC,GAAR,qCAAqBiC,KAArB;AACK,OA/EL;AAgFH,KAhHW;;AAAA,SA2HbE,gBA3Ha,GA2HOjD,CAAD,IAAO;AACtB,YAAME,KAAK,GAAGF,CAAC,CAACkD,MAAF,CAAShD,KAAvB;AACAiD,MAAAA,KAAK,CAACC,SAAN,CAAgBhD,OAAhB,CAAwBiD,IAAxB,CAA6BnD,KAA7B,EAAoCG,IAAD,IAAU;AACzC,cAAMiD,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,QAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAA+B,MAAI;AAC/B,eAAKd,QAAL,CAAezC,KAAD,IAAS;AACnBA,YAAAA,KAAK,CAAC+C,aAAN,CAAoBS,IAApB,CAAyBH,MAAM,CAACI,MAAhC;AACAzD,YAAAA,KAAK,CAACC,KAAN,CAAYuD,IAAZ,CAAiBpD,IAAjB;AACA,mBAAOJ,KAAP;AACH,WAJD;AAMF,SAPF;;AAQA,YAAGI,IAAH,EAAQ;AACJiD,UAAAA,MAAM,CAACK,aAAP,CAAqBtD,IAArB;AACH;AACJ,OAbD;AAeH,KA5IY;;AAET,SAAKJ,KAAL,GAAW;AAEP2D,MAAAA,IAAI,EAAG,EAFA;AAGPZ,MAAAA,aAAa,EAAC,EAHP;AAIPa,MAAAA,SAAS,EAAC;AAJH,KAAX;AAOC,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKd,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAuGFD,EAAAA,eAAe,CAACE,KAAD,EAAQ;AACnB,SAAKtB,QAAL,CAAc;AAEVkB,MAAAA,IAAI,EAAEI,KAAK,CAACd,MAAN,CAAae;AAFT,KAAd;AAIH;;AAsBDC,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWkE,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKL,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADf,CADD,EAKY;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKd,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAA7B;AAA+D,MAAA,QAAQ,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,IAAI,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,EASQ,KAAK9D,KAAL,CAAW+C,aAAX,CAAyBoB,GAAzB,CAA6B,CAACC,QAAD,EAAUC,CAAV,KAAc;AACvC,aACA;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAED,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA;AAKH,KAND,CATR,CALZ,EAwBY;AAAQ,MAAA,OAAO,EAAE,KAAKtE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAA9B,CAxBZ,CADJ;AA8BH;;AA/KiC;;AAkLtC,eAAeH,QAAf","sourcesContent":["//解答の閲覧画面のコンポーネントを編集\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { db } from '../firebase';\n\nclass Response extends React.Component{\n    constructor(){\n        super()\n        this.state={\n\n            text : \"\",\n            postimageurls:[],\n            responses:[]\n            \n         }\n         this.handleInputText = this.handleInputText.bind(this);\n         \n         this.handleFileSelect = this.handleFileSelect.bind(this);\n     }\n\n\n     save = (e) => {\n\n        \n\n        if(this.state.files!=[]){\n             e.preventDefault()\n             this.state.files.forEach((file)=>{\n                \n                 storage.ref().child(`images/${file.name}`).put(file).then(snap => {\n                     console.log('Uploaded a blob or file!');\n                 });\n             })\n         }   \n         let id =0;\n         let post_id = String(id)\n         const user = firebase.auth().currentUser\n         const userdb = db.collection(\"users\").doc(user.uid);\n         userdb.get().then((userdb) => {\n             if (userdb.exists) {\n                 console.log(\"Document data:\", userdb.data());\n             \n                     if(this.state.files==null){\n                         db.collection(\"posts\").doc().set({\n                             post_id : db.collection(\"posts\").doc(),\n                             name: userdb.data().name,\n                             pic: userdb.data().pic,\n                             email: userdb.data().email,\n                             course: userdb.data().course,\n                             nickname: userdb.data().nickname,\n                             body: this.state.body,\n                             title: this.state.title,\n                             favcount: 0,\n                             librarycount: 0,\n                             timestamp: new Date(),\n                             answered:this.state.answered,\n                             postimageurl:[]\n \n                         })        \n                         .then(() => {\n                             this.setState({\n                                 post_id : db.collection(\"posts\").doc(),\n                                 name: userdb.data().name,\n                                 pic: userdb.data().pic,\n                                 email: userdb.data().email,\n                                 course: userdb.data().course,\n                                 nickname: userdb.data().nickname,\n                                 body: this.state.body,\n                                 title: this.state.title,\n                                 favcount: 0,\n                                 librarycount: 0,\n                                 timestamp: new Date(),\n                                 index : true\n                             })\n                             console.log(`追加に成功しました `);\n                             this.props.changepost()\n                         })\n                         .catch((error) => {\n                             console.log(`追加に失敗しました (${error})`);\n                         });\n                     }else{\n                         db.collection(\"posts\").doc().set({\n                             post_id : db.collection(\"posts\").doc(),\n                             name: userdb.data().name,\n                             pic: userdb.data().pic,\n                             email: userdb.data().email,\n                             course: userdb.data().course,\n                             nickname: userdb.data().nickname,\n                             body: this.state.body,\n                             title: this.state.title,\n                             favcount: 0,\n                             librarycount: 0,\n                             timestamp: new Date(),\n                             answered:this.state.answered,\n                             postimageurl:this.state.postimageurls\n \n                         })        \n                         .then(() => {\n                            \n                             console.log(`追加に成功しました `);\n                             \n                         })\n                         .catch((error) => {\n                             console.log(`追加に失敗しました (${error})`);\n                         });\n \n \n \n                     }\n             } else {\n                 // doc.data() will be undefined in this case\n                 console.log(\"No such document!\");\n             }\n                     \n         })\n         .catch(function(error){\n         console.log(`取得失敗 (${error})`);\n             });\n     }\n\n\n    handleInputText(event) {\n        this.setState({\n\n            text: event.target.value\n        })\n    }\n\n\n    handleFileSelect = (e) => {\n        const files = e.target.files\n        Array.prototype.forEach.call(files,(file) => {\n            const reader = new FileReader()\n            reader.addEventListener(\"load\",()=>{\n                this.setState((state)=>{\n                    state.postimageurls.push(reader.result)\n                    state.files.push(file)\n                    return state\n                })\n\n             })\n            if(file){\n                reader.readAsDataURL(file)\n            }\n        });\n        \n    }\n\n    render(){\n        \n        return(\n            <div>\n             <div className=\"posttitle\">回答を入力:\n                            <input type='text' value={this.state.Text} onChange={this.handleInputText.bind(this)} />\n                        </div>\n                       \n                        <div className=\"file-field input-field\">\n                            <div className=\"btn\">\n                                <span>File</span>\n                                <input type=\"file\" onChange={this.handleFileSelect.bind(this)} multiple />\n                            </div>\n                            <div className=\"file-path-wrapper\">\n                                <input className=\"file-path validate\" type=\"text\"/>\n                            </div>\n                            {\n                                this.state.postimageurls.map((imageurl,i)=>{\n                                    return (\n                                    <div key={i}>\n                                        <img src={imageurl}></img>\n                                    </div>\n                                    )\n                                })\n                            }\n                            \n                        </div>\n                        <button onClick={this.save}  ><Link to='/posts'>回答を投稿する</Link></button>\n                        </div>\n\n                      \n        )\n    }\n}\n\nexport default Response\n"]},"metadata":{},"sourceType":"module"}