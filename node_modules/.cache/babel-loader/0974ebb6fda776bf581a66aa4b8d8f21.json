{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n\n    this.changepost = () => {\n      if (this.state.postpage == true) {\n        this.setState({\n          postpage: false\n        });\n      } else {\n        this.setState({\n          postpage: true\n        });\n      }\n    };\n\n    this.post = () => {\n      this.setState({\n        postpage: true\n      });\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      user: null,\n      pictureurl: \"\"\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.get().then(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data();\n        const pathref = storage.ref(\"images/\".concat(post.postpicname));\n        pathref.getDownloadURL().then(url => {\n          this.setState({\n            pictureurl: url\n          });\n        });\n        return {\n          title: post.title,\n          body: post.body,\n          name: post.name,\n          pic: post.pic,\n          course: post.course,\n          nickname: post.nickname,\n          favcount: post.favcount,\n          librarycount: post.librarycount,\n          timestamp: post.timestamp,\n          postpicname: post.postpicname\n        };\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.user);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.posts.map((post, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, post.title, post.body, post.name, React.createElement(\"img\", {\n        src: this.state.pictureurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), post.course, post.nickname, post.favcount, post.librarycount, post.timestamp.toString());\n    }), this.state.postpage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: this.state.user,\n      postpage: this.state.postpage,\n      changepost: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3092\\u3084\\u3081\\u308B\")) : React.createElement(\"button\", {\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\"));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/index.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Index","Component","constructor","changepost","state","postpage","setState","post","posts","user","pictureurl","componentDidMount","auth","onAuthStateChanged","postsref","collection","orderBy","get","then","snapshot","docs","map","postdoc","data","pathref","ref","postpicname","getDownloadURL","url","title","body","name","pic","course","nickname","favcount","librarycount","timestamp","render","console","log","i","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\n\nclass Index extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            posts:[],\n            postpage:false,\n            user:null,\n            pictureurl:\"\"\n\n\n        }\n    }\n\n    changepost=()=>{\n        if(this.state.postpage==true){\n            this.setState({\n                postpage:false\n            })\n        }else{\n            this.setState({\n                postpage:true\n            })\n        }\n\n    }\n\n    componentDidMount(){\n\n        \n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.get().then((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                 const post = postdoc.data();\n                 const pathref = storage.ref(`images/${post.postpicname}`)\n                 pathref.getDownloadURL().then((url)=>{\n                     this.setState({\n                        pictureurl:url\n                     })\n                 }\n                 )\n\n                return {\n                    title:post.title,\n                    body:post.body,\n                    name:post.name,\n                    pic:post.pic,\n                    course:post.course,\n                    nickname: post.nickname,\n                    favcount: post.favcount,\n                    librarycount: post.librarycount,\n                    timestamp: post.timestamp,\n                    postpicname: post.postpicname\n                }   \n               \n            })\n            this.setState({\n                posts : posts,\n                \n            })\n           \n        });\n\n\n\n    }\n\n    post = () =>{\n       \n            this.setState({\n                postpage : true\n            })  \n      \n    }\n\n   \n\n    render(){\n        console.log(this.state.user)\n        return(\n            <div>\n                {\n                     this.state.posts.map((post, i) => { \n                        return ( \n                            <div key={i}>\n                                {post.title}\n                                {post.body}\n                                {post.name}\n                                <img src={this.state.pictureurl}></img> \n                               \n                                {post.course}\n                                {post.nickname}\n                                {post.favcount}\n                                {post.librarycount}\n                                {post.timestamp.toString()}\n                            </div>\n                        )\n\n                    })\n                    \n                }\n\n                {this.state.postpage?(\n                    <div>\n                    <div><Post user = {this.state.user} postpage={this.state.postpage} changepost={this.changepost}/></div>\n                    <button onClick={this.changepost}>投稿をやめる</button>\n                    </div>\n                )\n                :\n                (\n                    <button onClick={this.post}>投稿する</button>\n                )\n\n                }\n                 \n            </div>\n        );\n    }\n    \n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}