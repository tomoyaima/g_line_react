{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Post.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { storage } from '../firebase';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileSelect = e => {\n      e.target.files.forEach(file => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n          this.setState({\n            imageurl: reader.result,\n            file: file\n          });\n        });\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      });\n    };\n\n    this.save = e => {\n      console.log(this.state.imageurl);\n      console.log(this.state.file);\n\n      if (this.state.file != null) {\n        e.preventDefault();\n        storage.ref().child(\"images/\".concat(this.state.file.name)).put(this.state.file).then(snap => {\n          console.log('Uploaded a blob or file!');\n        });\n      }\n\n      let id = 0;\n      let post_id = String(id);\n      const user = firebase.auth().currentUser;\n      const userdb = db.collection(\"users\").doc(user.uid);\n      userdb.get().then(userdb => {\n        if (userdb.exists) {\n          console.log(\"Document data:\", userdb.data());\n\n          if (this.state.file == null) {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postpicname: \"\"\n            }).then(() => {\n              this.setState({\n                post_id: db.collection(\"posts\").doc(),\n                name: userdb.data().name,\n                pic: userdb.data().pic,\n                email: userdb.data().email,\n                course: userdb.data().course,\n                nickname: userdb.data().nickname,\n                body: this.state.body,\n                title: this.state.title,\n                favcount: 0,\n                librarycount: 0,\n                timestamp: new Date(),\n                index: true\n              });\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n              this.props.changepost();\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          } else {\n            db.collection(\"posts\").doc().set({\n              post_id: db.collection(\"posts\").doc(),\n              name: userdb.data().name,\n              pic: userdb.data().pic,\n              email: userdb.data().email,\n              course: userdb.data().course,\n              nickname: userdb.data().nickname,\n              body: this.state.body,\n              title: this.state.title,\n              favcount: 0,\n              librarycount: 0,\n              timestamp: new Date(),\n              answered: this.state.answered,\n              postpicname: this.state.file.name\n            }).then(() => {\n              // this.setState({\n              //     post_id : db.collection(\"posts\").doc(),\n              //     name: userdb.data().name,\n              //     pic: userdb.data().pic,\n              //     email: userdb.data().email,\n              //     course: userdb.data().course,\n              //     nickname: userdb.data().nickname,\n              //     body: this.state.body,\n              //     title: this.state.title,\n              //     favcount: 0,\n              //     librarycount: 0,\n              //     timestamp: new Date(),\n              //     index : true\n              // })\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n              this.props.changepost();\n            }).catch(error => {\n              console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n            });\n          }\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"\\u53D6\\u5F97\\u5931\\u6557 (\".concat(error, \")\"));\n      });\n    };\n\n    this.state = {\n      body: \"\",\n      title: \"\",\n      favcount: 0,\n      librarycount: 0,\n      answered: false,\n      timestamp: null,\n      file: null,\n      imageurl: \"\"\n    };\n    this.save = this.save.bind(this);\n    this.handleInputtitle = this.handleInputtitle.bind(this);\n    this.handleInputbody = this.handleInputbody.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleInputtitle(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleInputbody(event) {\n    this.setState({\n      body: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), this.props.user ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.title,\n      onChange: this.handleInputtitle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"postbody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u5185\\u5BB9\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.body,\n      onChange: this.handleInputbody.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileSelect.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: this.state.imageurl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), this.state.title == '' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\") : this.state.body != '' ? React.createElement(\"button\", {\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"\\u8CEA\\u554F\\u3092\\u6295\\u7A3F\\u3059\\u308B\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"footer-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Post.js"],"names":["React","BrowserRouter","Route","Link","db","firebase","storage","Post","Component","constructor","props","handleFileSelect","e","target","files","forEach","file","reader","FileReader","addEventListener","setState","imageurl","result","readAsDataURL","save","console","log","state","preventDefault","ref","child","name","put","then","snap","id","post_id","String","user","auth","currentUser","userdb","collection","doc","uid","get","exists","data","set","pic","email","course","nickname","body","title","favcount","librarycount","timestamp","Date","answered","postpicname","index","changepost","catch","error","bind","handleInputtitle","handleInputbody","event","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { storage } from '../firebase'\n\n\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            body : \"\",\n            title : \"\",\n            favcount: 0,\n            librarycount: 0,\n            answered:false,\n            timestamp:null,\n            file:null,\n            imageurl:\"\"\n            \n\n        }\n\n        this.save = this.save.bind(this);\n        this.handleInputtitle = this.handleInputtitle.bind(this);\n        this.handleInputbody = this.handleInputbody.bind(this);\n        this.handleFileSelect = this.handleFileSelect.bind(this);\n    }\n\n    handleInputtitle(event) {\n        this.setState({\n\n            title: event.target.value\n        })\n    }\n\n    handleInputbody(event) {\n        this.setState({\n            body: event.target.value\n\n        })\n    }\n\n    handleFileSelect = (e) => {\n        \n        e.target.files.forEach((file) => {\n            const reader = new FileReader()\n        reader.addEventListener(\"load\",()=>{\n            this.setState({\n                imageurl: reader.result,\n                file: file\n            })\n\n        })\n        if(file){\n            reader.readAsDataURL(file)\n        }\n        });\n        \n    }\n\n    \n\n    save = (e) => {\n\n        console.log(this.state.imageurl)\n        console.log(this.state.file)\n       if(this.state.file!=null){\n            e.preventDefault()\n            storage.ref().child(`images/${this.state.file.name}`).put(this.state.file).then(snap => {\n                console.log('Uploaded a blob or file!');\n            });\n        }\n        let id =0;\n        let post_id = String(id)\n        const user = firebase.auth().currentUser\n        const userdb = db.collection(\"users\").doc(user.uid);\n        userdb.get().then((userdb) => {\n            if (userdb.exists) {\n                console.log(\"Document data:\", userdb.data());\n            \n                    if(this.state.file==null){\n                        db.collection(\"posts\").doc().set({\n                            post_id : db.collection(\"posts\").doc(),\n                            name: userdb.data().name,\n                            pic: userdb.data().pic,\n                            email: userdb.data().email,\n                            course: userdb.data().course,\n                            nickname: userdb.data().nickname,\n                            body: this.state.body,\n                            title: this.state.title,\n                            favcount: 0,\n                            librarycount: 0,\n                            timestamp: new Date(),\n                            answered:this.state.answered,\n                            postpicname:\"\"\n\n                        })        \n                        .then(() => {\n                            this.setState({\n                                post_id : db.collection(\"posts\").doc(),\n                                name: userdb.data().name,\n                                pic: userdb.data().pic,\n                                email: userdb.data().email,\n                                course: userdb.data().course,\n                                nickname: userdb.data().nickname,\n                                body: this.state.body,\n                                title: this.state.title,\n                                favcount: 0,\n                                librarycount: 0,\n                                timestamp: new Date(),\n                                index : true\n                            })\n                            console.log(`追加に成功しました `);\n                            this.props.changepost()\n                        })\n                        .catch((error) => {\n                            console.log(`追加に失敗しました (${error})`);\n                        });\n                    }else{\n                        db.collection(\"posts\").doc().set({\n                            post_id : db.collection(\"posts\").doc(),\n                            name: userdb.data().name,\n                            pic: userdb.data().pic,\n                            email: userdb.data().email,\n                            course: userdb.data().course,\n                            nickname: userdb.data().nickname,\n                            body: this.state.body,\n                            title: this.state.title,\n                            favcount: 0,\n                            librarycount: 0,\n                            timestamp: new Date(),\n                            answered:this.state.answered,\n                            postpicname:this.state.file.name\n\n                        })        \n                        .then(() => {\n                            // this.setState({\n                            //     post_id : db.collection(\"posts\").doc(),\n                            //     name: userdb.data().name,\n                            //     pic: userdb.data().pic,\n                            //     email: userdb.data().email,\n                            //     course: userdb.data().course,\n                            //     nickname: userdb.data().nickname,\n                            //     body: this.state.body,\n                            //     title: this.state.title,\n                            //     favcount: 0,\n                            //     librarycount: 0,\n                            //     timestamp: new Date(),\n                            //     index : true\n                            // })\n                            console.log(`追加に成功しました `);\n                            this.props.changepost()\n                        })\n                        .catch((error) => {\n                            console.log(`追加に失敗しました (${error})`);\n                        });\n\n\n\n                    }\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n                    \n        })\n        .catch(function(error){\n        console.log(`取得失敗 (${error})`);\n            });\n    }\n         \n       \n   \n\n    render() {\n      \n        return (\n            \n         \n                <div>\n   \n                    <div className=\"main\">\n                        <div className=\"App\">\n                            <p className=\"App-intro\">\n\n                            </p>\n\n\n                        </div>\n                        \n                        {this.props.user ? (\n                            <div>\n                              \n                                <form>\n                                    <div className=\"posttitle\">タイトルを入力:\n                                        <input type='text' value={this.state.title} onChange={this.handleInputtitle.bind(this)} />\n                                    </div>\n                                    <div className=\"postbody\">投稿内容を入力:\n                                        <input type='text' value={this.state.body} onChange={this.handleInputbody.bind(this)} />\n                                    </div>\n                                    <div className=\"file-field input-field\">\n                                        <div className=\"btn\">\n                                            <span>File</span>\n                                            <input type=\"file\" onChange={this.handleFileSelect.bind(this)} multiple />\n                                        </div>\n                                        <div className=\"file-path-wrapper\">\n                                            <input className=\"file-path validate\" type=\"text\"/>\n                                        </div>\n                                        <img src = {this.state.imageurl}/>\n                                    </div>\n                                    \n\n                                    {this.state.title == ''?\n                                        (\n                                            <div>タイトルを入力してください</div>\n                                        ) : (\n                                             this.state.body != ''?\n                                                (\n                                                    <button onClick={this.save}  ><Link to='/index'>質問を投稿する</Link></button>\n\n                                                ) : (\n                                                    <div>投稿内容を入力してください</div>\n\n                                                )\n                                        )\n                                    }\n\n\n                                </form>\n                               \n                            </div>\n                        ) : (\n                                <div></div>\n                            )\n                           \n                        }\n                        \n                    </div>\n\n                    <footer>\n                        <div className=\"footer-content\">\n\n                        </div>\n                    </footer>\n                </div>\n           \n           \n        );\n    }\n}\n\n\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}