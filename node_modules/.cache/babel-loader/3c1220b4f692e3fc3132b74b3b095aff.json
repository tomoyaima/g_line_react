{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [] // const postdb = db.collection(\"posts\").doc();\n      // postdb.get().then((postdb)=>{\n      // this.setState({\n      // name : postdb.data().nickname,\n      // body:postdb.data().body,\n      // title:postdb.data().title,\n      // fav:postdb.data().favcount,\n      // lib:postdb.data().librarycount,\n      // plf:postdb.data().pic,\n      // course: userdb.data().course\n      // })\n\n    };\n  }\n\n  componentDidMount() {\n    const postsref = db.collection(\"posts\");\n    postsref.get().then(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        return {\n          title: postdoc.title,\n          body: postdoc.body,\n          name: postdoc.name,\n          pic: postdoc.photoURL || '/images/profile_placeholder.png',\n          course: postdoc.course,\n          nickname: postdoc.nickname,\n          favcount: postdoc.favcount,\n          librarycount: postdoc.librarycount\n        };\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.body, this.state.favcount, this.state.course, this.state.title);\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/index.js"],"names":["React","Post","db","firebase","Index","Component","constructor","state","posts","componentDidMount","postsref","collection","get","then","snapshot","docs","map","postdoc","title","body","name","pic","photoURL","course","nickname","favcount","librarycount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0DAAP;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC,CAKX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAhBW,KAAX;AAqBH;;AACLC,EAAAA,iBAAiB,GAAE;AAGX,UAAMC,QAAQ,GAAGR,EAAE,CAACS,UAAH,CAAc,OAAd,CAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,GAAeC,IAAf,CAAqBC,QAAD,IAAc;AAC9B,YAAMN,KAAK,GAAGM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAoBC,OAAD,IAAY;AACzC,eAAO;AACHC,UAAAA,KAAK,EAACD,OAAO,CAACC,KADX;AAEHC,UAAAA,IAAI,EAACF,OAAO,CAACE,IAFV;AAGHC,UAAAA,IAAI,EAACH,OAAO,CAACG,IAHV;AAIHC,UAAAA,GAAG,EAACJ,OAAO,CAACK,QAAR,IAAoB,iCAJrB;AAKHC,UAAAA,MAAM,EAACN,OAAO,CAACM,MALZ;AAMHC,UAAAA,QAAQ,EAAEP,OAAO,CAACO,QANf;AAOHC,UAAAA,QAAQ,EAAER,OAAO,CAACQ,QAPf;AAQHC,UAAAA,YAAY,EAAET,OAAO,CAACS;AARnB,SAAP;AAgBH,OAjBa,CAAd;AAoBA,WAAKC,QAAL,CAAc;AACVnB,QAAAA,KAAK,EAAGA;AADE,OAAd;AAGH,KAxBD;AAyBH;;AAGDoB,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWY,IADhB,EAEK,KAAKZ,KAAL,CAAWkB,QAFhB,EAGK,KAAKlB,KAAL,CAAWgB,MAHhB,EAIK,KAAKhB,KAAL,CAAWW,KAJhB,CADJ;AAQH;;AAnE8B;;AAsEnC,eAAed,KAAf","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\n\nclass Index extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            posts:[]\n       \n\n        }\n        // const postdb = db.collection(\"posts\").doc();\n        // postdb.get().then((postdb)=>{\n        // this.setState({\n        // name : postdb.data().nickname,\n        // body:postdb.data().body,\n        // title:postdb.data().title,\n        // fav:postdb.data().favcount,\n        // lib:postdb.data().librarycount,\n        // plf:postdb.data().pic,\n        // course: userdb.data().course\n\n        // })\n\n\n        \n\n    }\ncomponentDidMount(){\n\n        \n        const postsref = db.collection(\"posts\")\n        postsref.get().then((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                return {\n                    title:postdoc.title,\n                    body:postdoc.body,\n                    name:postdoc.name,\n                    pic:postdoc.photoURL || '/images/profile_placeholder.png',\n                    course:postdoc.course,\n                    nickname: postdoc.nickname,\n                    favcount: postdoc.favcount,\n                    librarycount: postdoc.librarycount,\n                }   \n\n             \n\n\n\n\n            })\n       \n\n            this.setState({\n                posts : posts\n            })\n        });\n    }\n   \n\n    render(){\n        \n        return(\n            <div>\n                {this.state.body}\n                {this.state.favcount}\n                {this.state.course}\n                {this.state.title}\n            </div>\n        );\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}