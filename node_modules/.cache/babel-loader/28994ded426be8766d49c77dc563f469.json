{"ast":null,"code":"import _objectSpread from \"/Users/imatomo/Desktop/gline-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport Detail from \"./Detail\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changepost = () => {\n      this.setState({\n        postpage: false\n      });\n    };\n\n    this.post = () => {\n      this.setState({\n        postpage: false\n      });\n      this.setState({\n        postpage: true\n      });\n    };\n\n    this.detail = () => {\n      if (post != null) {\n        this.setState({\n          detail_id: post.id\n        });\n      }\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      user: null,\n      pictureurl: \"\",\n      detail: []\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.limit(20).onSnapshot(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data(); //  console.log(post);\n\n        if (post.postimageurl != []) {\n          const pathref = storage.ref().child(\"images/\".concat(post.postimageurl));\n          pathref.getDownloadURL().then(url => {\n            this.setState(state => {\n              const index = state.posts.findIndex(post => {\n                return post.uid === postdoc.uid;\n              });\n              state.posts[index].postimageurl.push(url);\n              return state;\n            });\n          });\n        }\n\n        return _objectSpread({}, post, {\n          uid: postdoc.uid\n        });\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.user ? this.state.posts.map((post, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: post.id,\n        onclick: this.detail(post),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, post.title), post.body, post.postimageurl && post.postimageurl.map((imageurl, j) => {\n        return React.createElement(\"div\", {\n          key: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: imageurl,\n          className: \"post-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n      }), post.course, post.nickname, post.favcount, post.librarycount);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.props.user ? this.state.postpage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: this.state.user,\n      postpage: this.state.postpage,\n      changepost: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3092\\u3084\\u3081\\u308B\")) : React.createElement(\"button\", {\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/posts/:id\",\n      render: () => React.createElement(Detail, {\n        user: this.props.user,\n        post: this.state.detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Index.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Detail","Index","Component","constructor","props","changepost","setState","postpage","post","detail","detail_id","id","state","posts","user","pictureurl","componentDidMount","auth","onAuthStateChanged","postsref","collection","orderBy","limit","onSnapshot","snapshot","docs","map","postdoc","data","postimageurl","pathref","ref","child","getDownloadURL","then","url","index","findIndex","uid","push","render","i","title","body","imageurl","j","course","nickname","favcount","librarycount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\nimport Detail from \"./Detail\"\n\n\nclass Index extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            posts:[],\n            postpage:false,\n            user:null,\n            pictureurl:\"\",\n            detail:[]\n\n\n        }\n    }\n\n    changepost=()=>{\n        this.setState({\n        postpage:false\n    })\n    }\n\n    componentDidMount(){\n\n        \n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.limit(20).onSnapshot((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                const post = postdoc.data();\n                    //  console.log(post);\n                if(post.postimageurl!=[]){\n                    const pathref = storage.ref().child(`images/${post.postimageurl}`)\n                    pathref.getDownloadURL().then((url)=>{ \n\n                        this.setState((state)=>{\n                            const index =  state.posts.findIndex((post)=>{\n                                return post.uid === postdoc.uid;\n                            })\n                            state.posts[index].postimageurl.push(url)\n\n\n                            \n                            return state\n                        })\n                    })\n\n                    \n                }\n                return {...post,uid:postdoc.uid}\n                \n               \n            })\n            this.setState({\n                posts : posts,\n                \n            })\n           \n        });\n        \n       \n\n\n    \n    }\n\n   \n    post = () =>{\n            this.setState({\n        postpage:false\n    })\n            this.setState({\n                postpage : true\n            })  \n      \n    }\n\n   detail =()=>{\n       if(post!=null){\n       this.setState({\n           detail_id:post.id\n    })\n}\n    }\n\n    render(){\n        \n        return(\n            <div>\n\n                {this.props.user?(\n                     this.state.posts.map((post, i) => { \n                      \n                        return ( \n                            <div key={i}>\n                                <Link to={post.id} onclick ={this.detail(post)}>{post.title}</Link>\n                                {post.body}\n                                \n                                {post.postimageurl&&\n                                    post.postimageurl.map((imageurl,j)=>{\n                                        return (\n                                        <div key={j}>\n                                        <img src={imageurl} className=\"post-image\"></img>\n                                        </div>\n                                        )\n                                    })\n                                }\n                                {post.course}\n                                {post.nickname}\n                                {post.favcount}\n                                {post.librarycount}\n                                {/* {post.timestamp.toString()} */}\n                            </div>\n                        )\n\n                    })\n                )   \n                :\n                (\n                    <div></div>\n                )\n                }\n            {this.props.user?(\n                this.state.postpage?(\n                    <div>\n                    <div><Post user = {this.state.user} postpage={this.state.postpage} changepost={this.changepost}/></div>\n                    <button onClick={this.changepost}>投稿をやめる</button>\n                    </div>\n                )\n                :\n                (\n                    <button  onClick={this.post}>投稿する</button>\n                )\n            )   \n            :\n            (\n                <div></div>\n            )\n            }\n            <BrowserRouter>\n            \n                <div>\n                    <Route  path='/posts/:id' render={()=><Detail   user ={this.props.user} post={this.state.detail}/>}/>\n                </div>\n                \n            </BrowserRouter> \n            </div>\n        );\n    }\n    \n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}