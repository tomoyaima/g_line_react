{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/App.js\";\nimport React from 'react';\nimport Login from \"./components/login\";\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport LandingPage from './components/landingPage';\nimport LoginHeader from './components/items/login-header';\nimport Post from './components/post';\nimport Library from './components/library';\nimport Answer from './components/answer';\nimport MyPage from './components/mypage';\nimport './bower_components/materialize/dist/css/materialize.css';\nimport firebase from './firebase';\nimport Index from './components/index';\nimport { db } from './firebase';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.login = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n      this.setState({\n        isLogging: true\n      });\n      const user = firebase.auth().currentUser;\n      const userdb = db.collection(\"users\").doc(user.uid);\n\n      if (userdb.course == '') {\n        this.props.history.push('/index');\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.logout = () => {\n      firebase.auth().signOut();\n      this.setState({\n        isLogging: false\n      });\n    };\n\n    this.state = {\n      user: null,\n      isLogging: false\n    };\n  } // componentDidMount() {\n  //   firebase.auth().onAuthStateChanged(user => {\n  //     this.setState({ user })\n  //   })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(LoginHeader, {\n      login: this.login,\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(LandingPage, {\n      login: this.login,\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Login, {\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Post, {\n      logout: this.logout,\n      user: this.state.user,\n      isLogging: this.state.isLogging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: LandingPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post\",\n      component: Post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/library\",\n      component: Library,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/index\",\n      component: Index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/answer\",\n      component: Answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/mypage\",\n      component: MyPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/App.js"],"names":["React","Login","BrowserRouter","Route","Link","Switch","LandingPage","LoginHeader","Post","Library","Answer","MyPage","firebase","Index","db","App","Component","constructor","login","provider","auth","GoogleAuthProvider","signInWithPopup","setState","isLogging","user","currentUser","userdb","collection","doc","uid","course","props","history","push","logout","signOut","state","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from \"./components/login\";\nimport { BrowserRouter, Route, Link ,Switch} from 'react-router-dom'\nimport LandingPage from './components/landingPage'\nimport LoginHeader from './components/items/login-header'\nimport Post from './components/post'\nimport Library from './components/library'\nimport Answer from './components/answer'\nimport MyPage from './components/mypage'\nimport './bower_components/materialize/dist/css/materialize.css'\nimport firebase from './firebase'\nimport Index from './components/index'\nimport { db } from './firebase'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state ={\n    user:null,\n    isLogging:false\n    }\n  }\n\n\n  // componentDidMount() {\n  //   firebase.auth().onAuthStateChanged(user => {\n  //     this.setState({ user })\n  //   })\n  // }\n\n  login=()=> {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    firebase.auth().signInWithPopup(provider)\n    this.setState({ isLogging:true }) \n    const user = firebase.auth().currentUser\n    const userdb =  db.collection(\"users\").doc(user.uid)\n        if(userdb.course == ''){\n      this.props.history.push('/index')\n    }else{\n      this.props.history.push('/login')\n    }\n    \n  }\n\n  logout=()=> {\n    firebase.auth().signOut()\n    this.setState({ isLogging:false }) \n  }\n\n   render(){\n    return(\n      <div>\n        <LoginHeader login={this.login } logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n        <LandingPage login={this.login } logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n        <Login logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n        <Post  logout={this.logout} user ={this.state.user} isLogging = {this.state.isLogging}/>\n      <BrowserRouter>\n      \n        <div>\n        <Switch>\n          <Route path='/' component={LandingPage} />\n          <Route exact path='/login' component={Login}/>\n          <Route path='/post' component={Post} />\n          <Route path='/library' component={Library}/>\n          <Route path='/index' component={Index}/>\n          <Route path='/answer' component={Answer} />\n          <Route path='/mypage' component={MyPage}/>\n          </Switch>\n        </div>\n       \n      </BrowserRouter>\n      \n      \n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}