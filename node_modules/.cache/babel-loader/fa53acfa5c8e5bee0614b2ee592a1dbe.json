{"ast":null,"code":"import _objectSpread from \"/Users/imatomo/Desktop/gline-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Detail.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport Posts from \"./Posts\";\nimport Response from \"./Response\";\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: [],\n      answered: false,\n      answerdisplay: false\n    };\n  }\n\n  componentWillMount() {\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.limit(20).onSnapshot(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data(); //  console.log(post);\n\n        if (post.postimageurl != []) {\n          const pathref = storage.ref().child(\"images/\".concat(post.postimageurl));\n          pathref.getDownloadURL().then(url => {\n            this.setState(state => {\n              const index = state.posts.findIndex(post => {\n                return post.id === postdoc.id;\n              });\n              state.posts[index].postimageurl.push(url);\n              return state;\n            });\n          });\n        }\n\n        return _objectSpread({}, post, {\n          id: postdoc.id\n        });\n      });\n      console.log(posts);\n      const uid = this.props.match.params.id;\n      const post = posts.find(posts => {\n        return posts.id === uid;\n      });\n      this.setState({\n        post: post\n      });\n    });\n    const user = firebase.auth().currentUser;\n\n    if (user.email == this.state.post.email) {\n      this.setState({\n        answerdisplay: true\n      });\n    }\n  }\n\n  answered() {\n    db.collection(\"posts\").doc().set({\n      answered: this.state.answered\n    }).then(() => {\n      console.log(\"\\u8FFD\\u52A0\\u306B\\u6210\\u529F\\u3057\\u307E\\u3057\\u305F \");\n      this.props.changepost();\n    }).catch(error => {\n      console.log(\"\\u8FFD\\u52A0\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F (\".concat(error, \")\"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.user && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.post.title, this.state.post.body, this.state.post.name, this.state.post.pictureurl, this.state.post.course, this.state.post.nickname, this.state.post.favcount, this.state.post.librarycount), this.state.answerdisplay && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.ansewered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\u56DE\\u7B54\\u6E08\\u307F\\u306B\\u3059\\u308B\")), React.createElement(Response, {\n      match: this.props.match,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Detail.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Posts","Response","Detail","Component","constructor","props","state","post","answered","answerdisplay","componentWillMount","postsref","collection","orderBy","limit","onSnapshot","snapshot","posts","docs","map","postdoc","data","postimageurl","pathref","ref","child","getDownloadURL","then","url","setState","index","findIndex","id","push","console","log","uid","match","params","find","user","auth","currentUser","email","doc","set","changepost","catch","error","render","title","body","name","pictureurl","course","nickname","favcount","librarycount","ansewered"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\nimport Posts from \"./Posts\";\nimport Response from \"./Response\"\n\nclass Detail extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n           post:[],\n           answered:false,\n           answerdisplay:false\n        }\n    }\n\n  \n    componentWillMount(){\n\n        \n\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.limit(20).onSnapshot((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                const post = postdoc.data();\n                    //  console.log(post);\n                if(post.postimageurl!=[]){\n                    const pathref = storage.ref().child(`images/${post.postimageurl}`)\n                    pathref.getDownloadURL().then((url)=>{ \n\n                        this.setState((state)=>{\n                            const index =  state.posts.findIndex((post)=>{\n                                return post.id === postdoc.id;\n                            })\n                            state.posts[index].postimageurl.push(url)\n\n\n                            \n                            return state\n                        })\n                    })\n\n                    \n                }\n                return {...post,id:postdoc.id}\n                \n               \n            })\n            console.log(posts)\n            const uid =this.props.match.params.id\n            const post= posts.find((posts) => {return (posts.id === uid);})\n            this.setState({\n                post:post\n            })\n           \n        });\n        const user = firebase.auth().currentUser\n        if(user.email==this.state.post.email){\n            this.setState({\n            answerdisplay:true\n            })\n        }\n       \n    \n    }\n    answered(){\n        db.collection(\"posts\").doc().set({\n    \n            answered:this.state.answered,\n         \n\n        })        \n        .then(() => {\n          \n            console.log(`追加に成功しました `);\n            this.props.changepost()\n        })\n        .catch((error) => {\n            console.log(`追加に失敗しました (${error})`);\n        });\n    }\n   \n\n    render(){\n        \n        return(\n            <div>\n\n                {this.props.user&&\n                     \n                    \n                           <div>\n                                {this.state.post.title}\n                                {this.state.post.body}\n                                {this.state.post.name}\n                                {this.state.post.pictureurl}\n                               \n                                {this.state.post.course}\n                                {this.state.post.nickname}\n                                {this.state.post.favcount}\n                                {this.state.post.librarycount}\n                               \n                            </div> \n                         \n                           \n                   \n                }\n                {this.state.answerdisplay&&\n                    <div>\n                        <button onClick={this.ansewered}>回答済みにする</button>\n                    </div>\n\n                }\n            \n            <Response match={this.props.match}/>\n            </div>\n        )\n    }\n}\n\nexport default Detail\n"]},"metadata":{},"sourceType":"module"}