{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changepost = () => {\n      this.setState({\n        postpage: false\n      });\n    };\n\n    this.post = () => {\n      this.setState({\n        postpage: false\n      });\n      this.setState({\n        postpage: true\n      });\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      user: null,\n      pictureurl: \"\"\n    };\n  }\n\n  componentWillReceiveProps() {\n    console.log(this.state.postpage);\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.get().then(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data();\n        console.log(post);\n        const pathref = storage.ref().child(\"images/\".concat(post.postpicname));\n        pathref.getDownloadURL().then(url => {\n          this.setState({\n            pictureurl: url\n          });\n        });\n        return {\n          title: post.title,\n          body: post.body,\n          name: post.name,\n          pic: post.pic,\n          course: post.course,\n          nickname: post.nickname,\n          favcount: post.favcount,\n          librarycount: post.librarycount,\n          timestamp: post.timestamp,\n          postpicname: post.postpicname\n        };\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.user ? this.state.posts.map((post, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, post.title, post.body, post.name, post.pictureurl, post.course, post.nickname, post.favcount, post.librarycount);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), this.props.user ? this.state.postpage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: this.state.user,\n      postpage: this.state.postpage,\n      changepost: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3092\\u3084\\u3081\\u308B\")) : React.createElement(\"button\", {\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Index.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Index","Component","constructor","props","changepost","setState","postpage","post","state","posts","user","pictureurl","componentWillReceiveProps","console","log","auth","onAuthStateChanged","postsref","collection","orderBy","get","then","snapshot","docs","map","postdoc","data","pathref","ref","child","postpicname","getDownloadURL","url","title","body","name","pic","course","nickname","favcount","librarycount","timestamp","render","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\n\nclass Index extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            posts:[],\n            postpage:false,\n            user:null,\n            pictureurl:\"\"\n\n\n        }\n    }\n\n    changepost=()=>{\n        this.setState({\n        postpage:false\n    })\n    }\n    componentWillReceiveProps(){\n        console.log(this.state.postpage)\n        \n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.get().then((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                 const post = postdoc.data();\n                 console.log(post);\n                 \n                 const pathref = storage.ref().child(`images/${post.postpicname}`)\n                 pathref.getDownloadURL().then((url)=>{\n                     this.setState({\n                        pictureurl:url\n                     })\n                 }\n                 )\n\n                return {\n                    title:post.title,\n                    body:post.body,\n                    name:post.name,\n                    pic:post.pic,\n                    course:post.course,\n                    nickname: post.nickname,\n                    favcount: post.favcount,\n                    librarycount: post.librarycount,\n                    timestamp: post.timestamp,\n                    postpicname: post.postpicname\n                }   \n               \n            })\n            this.setState({\n                posts : posts,\n                \n            })\n           \n        });\n\n\n\n    }\n\n   \n    post = () =>{\n            this.setState({\n        postpage:false\n    })\n            this.setState({\n                postpage : true\n            })  \n      \n    }\n\n   \n\n    render(){\n        \n        return(\n            <div>\n\n                {this.props.user?(\n                     this.state.posts.map((post, i) => { \n                        return ( \n                            <div key={i}>\n                                {post.title}\n                                {post.body}\n                                {post.name}\n                                {post.pictureurl}\n                               \n                                {post.course}\n                                {post.nickname}\n                                {post.favcount}\n                                {post.librarycount}\n                                {/* {post.timestamp.toString()} */}\n                            </div>\n                        )\n\n                    })\n                )   \n                :\n                (\n                    <div></div>\n                )\n                }\n            {this.props.user?(\n                this.state.postpage?(\n                    <div>\n                    <div><Post user = {this.state.user} postpage={this.state.postpage} changepost={this.changepost}/></div>\n                    <button onClick={this.changepost}>投稿をやめる</button>\n                    </div>\n                )\n                :\n                (\n                    <button  onClick={this.post}>投稿する</button>\n                )\n            )   \n            :\n            (\n                <div></div>\n            )\n            }\n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}