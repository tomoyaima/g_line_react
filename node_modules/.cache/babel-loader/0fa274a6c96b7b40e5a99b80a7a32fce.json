{"ast":null,"code":"import _objectSpread from \"/Users/imatomo/Desktop/gline-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport Detail from \"./Detail\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changepost = () => {\n      this.setState({\n        postpage: false\n      });\n    };\n\n    this.post = () => {\n      this.setState({\n        postpage: false\n      });\n      this.setState({\n        postpage: true\n      });\n    };\n\n    this.detail = post => {\n      this.setState({\n        detail: post\n      });\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      user: null,\n      post: []\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.limit(20).onSnapshot(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data(); //  console.log(post);\n\n        if (post.postimageurl != []) {\n          const pathref = storage.ref().child(\"images/\".concat(post.postimageurl));\n          pathref.getDownloadURL().then(url => {\n            this.setState(state => {\n              const index = state.posts.findIndex(post => {\n                return post.id === postdoc.id;\n              });\n              state.posts[index].postimageurl.push(url);\n              return state;\n            });\n          });\n        }\n\n        console.log(postdoc);\n        return _objectSpread({}, post, {\n          id: postdoc.id\n        });\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.user ? this.state.posts.map((post, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, post.body, React.createElement(Link, {\n        to: post.id,\n        onclick: this.detail(post),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", post.title), post.postimageurl && post.postimageurl.map((imageurl, j) => {\n        return React.createElement(\"div\", {\n          key: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: imageurl,\n          className: \"post-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }));\n      }), post.course, post.nickname, post.favcount, post.librarycount, React.createElement(Route, {\n        path: \"/detail\".concat(post.id),\n        render: () => React.createElement(Detail, {\n          user: this.props.user,\n          detail: this.state.detail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.props.user ? this.state.postpage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: this.state.user,\n      postpage: this.state.postpage,\n      changepost: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3092\\u3084\\u3081\\u308B\")) : React.createElement(\"button\", {\n      onClick: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Index.js"],"names":["React","Post","Detail","db","firebase","BrowserRouter","Route","Link","storage","Index","Component","constructor","props","changepost","setState","postpage","post","detail","state","posts","user","componentDidMount","auth","onAuthStateChanged","postsref","collection","orderBy","limit","onSnapshot","snapshot","docs","map","postdoc","data","postimageurl","pathref","ref","child","getDownloadURL","then","url","index","findIndex","id","push","console","log","render","i","body","title","imageurl","j","course","nickname","favcount","librarycount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport Detail from \"./Detail\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\n\nclass Index extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            posts:[],\n            postpage:false,\n            user:null,\n            post:[]\n\n\n        }\n    }\n\n    changepost=()=>{\n        this.setState({\n        postpage:false\n    })\n    }\n    componentDidMount(){\n     \n       \n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.limit(20).onSnapshot((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                const post = postdoc.data();\n                    //  console.log(post);\n                if(post.postimageurl!=[]){\n                    const pathref = storage.ref().child(`images/${post.postimageurl}`)\n                    pathref.getDownloadURL().then((url)=>{ \n\n                        this.setState((state)=>{\n                            const index =  state.posts.findIndex((post)=>{\n                                return post.id === postdoc.id;\n                            })\n                            state.posts[index].postimageurl.push(url)\n\n\n                            \n                            return state\n                        })\n                    })\n\n                    \n                }\n                console.log(postdoc)\n                return {...post,id:postdoc.id}\n                \n               \n            })\n            this.setState({\n                posts : posts,\n                \n            })\n           \n        });\n        \n       \n\n\n    \n    }\n\n   \n    post = () =>{\n            this.setState({\n        postpage:false\n    })\n            this.setState({\n                postpage : true\n            })  \n      \n    }\n\n   detail =(post)=>{\n       this.setState({\n           detail:post\n       })\n   }\n\n    render(){\n        \n        return(\n            <div>\n\n                {this.props.user?(\n                     this.state.posts.map((post, i) => { \n                      \n                        return ( \n                            <div key={i}>\n                                \n                                {post.body}\n                                <Link to={post.id} onclick={this.detail(post)}> {post.title}</Link>\n                                {post.postimageurl&&\n                                    post.postimageurl.map((imageurl,j)=>{\n                                        return (\n                                        <div key={j}>\n                                        <img src={imageurl} className=\"post-image\"></img>\n                                        </div>\n                                        )\n                                    })\n                                }\n                                {post.course}\n                                {post.nickname}\n                                {post.favcount}\n                                {post.librarycount}\n                                {/* {post.timestamp.toString()} */}\n                                <Route  path={`/detail${post.id}`} render={() => <Detail user={this.props.user} detail={this.state.detail} />}/>\n                            </div>\n\n                        )\n\n                    })\n                   \n                )   \n                :\n                (\n                    <div></div>\n                )\n                }\n            {this.props.user?(\n                this.state.postpage?(\n                    <div>\n                    <div><Post user = {this.state.user} postpage={this.state.postpage} changepost={this.changepost}/></div>\n                    <button onClick={this.changepost}>投稿をやめる</button>\n                    </div>\n                )\n                :\n                (\n                    <button  onClick={this.post}>投稿する</button>\n                )\n            )   \n            :\n            (\n                <div></div>\n            )\n            }\n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}