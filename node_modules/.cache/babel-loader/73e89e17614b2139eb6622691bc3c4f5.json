{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/index.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport Login from \"./login\";\n\nclass Index extends React.Component {\n  constructor() {\n    super();\n\n    this.changepost = () => {\n      if (this.state.postpage == true) {\n        this.setState({\n          postpage: false\n        });\n      } else {\n        this.setState({\n          postpage: true\n        });\n      }\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      pictureurl: \"\",\n      usercourse: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const user = firebase.auth().currentUser;\n    console.log(user);\n    const userdb = db.collection(\"users\").doc(user.uid);\n    userdb.get().then(userdb => {\n      if (userdb.exists) {\n        this.setState({\n          usercourse: userdb.data().course\n        });\n        console.log(\"Document data:\", userdb.data());\n      }\n    });\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.get().then(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data();\n        const pathref = storage.ref(\"images/\".concat(post.postpicname));\n        pathref.getDownloadURL().then(url => {\n          this.setState({\n            pictureurl: url\n          });\n        });\n        return {\n          title: post.title,\n          body: post.body,\n          name: post.name,\n          pic: post.pic,\n          course: post.course,\n          nickname: post.nickname,\n          favcount: post.favcount,\n          librarycount: post.librarycount,\n          timestamp: post.timestamp,\n          postpicname: post.postpicname\n        };\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.user);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.usercourse == \"\" ? React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : this.state.posts.map((post, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, post.title, post.body, post.name, React.createElement(\"img\", {\n        src: this.state.pictureurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), post.course, post.nickname, post.favcount, post.librarycount, post.timestamp.toString());\n    }), this.state.usercourse == \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : this.state.postpage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: this.state.user,\n      postpage: this.state.postpage,\n      changepost: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3092\\u3084\\u3081\\u308B\")) : React.createElement(\"button\", {\n      onClick: this.changepost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"\\u6295\\u7A3F\\u3059\\u308B\"));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/index.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Link","storage","Login","Index","Component","constructor","changepost","state","postpage","setState","posts","pictureurl","usercourse","componentDidMount","user","auth","currentUser","console","log","userdb","collection","doc","uid","get","then","exists","data","course","onAuthStateChanged","postsref","orderBy","snapshot","docs","map","postdoc","post","pathref","ref","postpicname","getDownloadURL","url","title","body","name","pic","nickname","favcount","librarycount","timestamp","render","i","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\nimport Login from \"./login\";\n\nclass Index extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            posts:[],\n            postpage:false,\n            pictureurl:\"\",\n            usercourse:\"\"\n\n        }\n    }\n\n    changepost=()=>{\n        if(this.state.postpage==true){\n            this.setState({\n                postpage:false\n            })\n        }else{\n            this.setState({\n                postpage:true\n            })\n        }\n\n    }\n\n\n\n    componentDidMount(){\n        const user = firebase.auth().currentUser\n        console.log(user)\n        const userdb = db.collection(\"users\").doc(user.uid);\n        userdb.get().then((userdb) => {\n            if (userdb.exists) {\n                this.setState({\n                    usercourse:userdb.data().course\n                })\n                console.log(\"Document data:\", userdb.data());\n            }\n\n        }\n        )\n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.get().then((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                 const post = postdoc.data();\n                 const pathref = storage.ref(`images/${post.postpicname}`)\n                 pathref.getDownloadURL().then((url)=>{\n                     this.setState({\n                        pictureurl:url\n                     })\n                 }\n                 )\n\n                return {\n                    title:post.title,\n                    body:post.body,\n                    name:post.name,\n                    pic:post.pic,\n                    course:post.course,\n                    nickname: post.nickname,\n                    favcount: post.favcount,\n                    librarycount: post.librarycount,\n                    timestamp: post.timestamp,\n                    postpicname: post.postpicname\n                }   \n               \n            })\n            this.setState({\n                posts : posts,\n                \n            })\n           \n        });\n\n\n\n    }\n\n    \n\n   \n\n    render(){\n        console.log(this.state.user)\n        return(\n            <div>\n\n                {\n                    \n                    this.state.usercourse==\"\"?(\n                        <Login/>\n                    )\n                    :\n                    (\n                        \n                        this.state.posts.map((post, i) => { \n                                return ( \n                                    <div key={i}>\n                                        {post.title}\n                                        {post.body}\n                                        {post.name}\n                                        <img src={this.state.pictureurl}></img> \n                                    \n                                        {post.course}\n                                        {post.nickname}\n                                        {post.favcount}\n                                        {post.librarycount}\n                                        {post.timestamp.toString()}\n                                    </div>\n                                )\n\n                        })\n                      \n                    )   \n                }\n\n                {\n                    this.state.usercourse==\"\"?(\n                        <div></div>\n                    )\n\n                    :(\n                    this.state.postpage?(\n                        <div>\n                        <div><Post user = {this.state.user} postpage={this.state.postpage} changepost={this.changepost}/></div>\n                        <button onClick={this.changepost}>投稿をやめる</button>\n                        </div>\n                    )\n                    :\n                    (\n                        <button onClick={this.changepost}>投稿する</button>\n                    )\n                    )\n                }\n                 \n            </div>\n        );\n    }\n    \n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}