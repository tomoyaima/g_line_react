{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/post.js\";\nimport React from \"react\";\nimport \"./post.css\";\n\nclass Post extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [{\n        id: 1,\n        body: \"とりあえず表示してみる\"\n      }, {\n        id: 2,\n        body: \"私たち、いずれ書き換えられる運命\"\n      }]\n    };\n    this.changeText = this.changeText.bind(this);\n    this.submitTask = this.submitTask.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n  }\n\n  componentWillMount() {\n    this.fetchTasks();\n  }\n\n  fetchTasks() {\n    fetch(\"http://localhost:3001/post\") // データを取得しに行く\n    .then(response => response.json()) // json型のレスポンスをオブジェクトに変換する\n    .then(json => {\n      // オブジェクトに変換したレスポンスを受け取り、\n      this.setState({\n        tasks: json\n      }); // Stateを更新する\n    });\n  }\n\n  changeText(e) {\n    const inputText = e.target.value;\n    this.setState({\n      inputText: inputText\n    });\n    console.dir(inputText);\n  }\n\n  submitTask() {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: this.state.inputText\n      })\n    }).then(this.fetchTasks);\n  }\n\n  putTask(taskId) {\n    fetch(\"http://localhost:3001/tasks/\" + taskId, {\n      method: \"PUT\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: \"やったよ\"\n      })\n    }).then(this.fetchTasks);\n  }\n\n  deleteTask(taskId) {\n    fetch(\"http://localhost:3001/tasks/\" + taskId, {\n      method: \"DELETE\"\n    }).then(this.fetchTasks);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.tasks.map(task => {\n      return React.createElement(\"div\", {\n        className: \"task\",\n        key: task.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, task.body, React.createElement(\"button\", {\n        className: \"put\",\n        onClick: () => {\n          this.putTask(task.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"put\"), React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => {\n          this.deleteTask(task.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"delete\"));\n    })), React.createElement(\"div\", {\n      id: \"task-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.changeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"submit\")));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/post.js"],"names":["React","Post","Component","constructor","state","tasks","id","body","changeText","bind","submitTask","fetchTasks","componentWillMount","fetch","then","response","json","setState","e","inputText","target","value","console","dir","method","headers","JSON","stringify","putTask","taskId","deleteTask","render","map","task"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./post.css\";\n\n\n\nclass Post extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      tasks: [\n        {\n          id: 1,\n          body: \"とりあえず表示してみる\"\n        },\n        {\n          id: 2,\n          body: \"私たち、いずれ書き換えられる運命\"\n        }\n      ]\n    }\n    this.changeText = this.changeText.bind(this)\n    this.submitTask = this.submitTask.bind(this)\n    this.fetchTasks = this.fetchTasks.bind(this)\n  }\n\n\n  componentWillMount(){\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    fetch(\"http://localhost:3001/post\") // データを取得しに行く\n    .then( response => response.json() ) // json型のレスポンスをオブジェクトに変換する\n    .then( json => { // オブジェクトに変換したレスポンスを受け取り、\n      this.setState({ tasks: json }) // Stateを更新する\n    })\n  }\n\n  changeText(e) {\n    const inputText = e.target.value\n    this.setState({ inputText: inputText })\n    console.dir(inputText);\n  }\n\n  submitTask() {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ body: this.state.inputText })\n    })\n    .then( this.fetchTasks )\n  }\n\n  putTask(taskId) {\n    fetch(\"http://localhost:3001/tasks/\"+taskId, {\n      method: \"PUT\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ body: \"やったよ\" })\n    })\n    .then( this.fetchTasks )\n  }\n\n  deleteTask(taskId) {\n    fetch(\"http://localhost:3001/tasks/\"+taskId, {\n      method: \"DELETE\"\n    })\n    .then( this.fetchTasks )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"tasks\">\n        {\n          this.state.tasks.map( task => {\n              return (\n                <div className=\"task\" key={ task.id }>\n                  { task.body }\n                  <button className=\"put\" onClick={ ()=>{ this.putTask(task.id) } }>put</button>\n                  <button className=\"delete\" onClick={ ()=>{ this.deleteTask(task.id) } }>delete</button>\n                </div>\n              )\n          })\n        }\n        </div>\n        <div id=\"task-form\">\n          <input type=\"text\" onChange={ this.changeText }/>\n          <button onClick={ this.submitTask }>submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}