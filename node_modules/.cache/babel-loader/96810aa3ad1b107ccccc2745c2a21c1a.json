{"ast":null,"code":"import _objectSpread from \"/Users/imatomo/Desktop/gline-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Posts.js\";\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\";\nimport { db } from '../firebase';\nimport firebase from '../firebase';\nimport { BrowserRouter, Route, Redirect, Link } from 'react-router-dom';\nimport { storage } from '../firebase';\nimport Detail from \"./Detail\";\nimport Index from \"./Index\";\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changepost = () => {\n      this.setState({\n        postpage: false\n      });\n    };\n\n    this.post = () => {\n      if (this.state.postpage == true) {\n        this.setState({\n          postpage: false\n        });\n      } else {\n        this.setState({\n          postpage: true\n        });\n      }\n    };\n\n    this.state = {\n      posts: [],\n      postpage: false,\n      user: null,\n      pictureurl: \"\",\n      detail: []\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n    const user = firebase.auth().currentUser;\n    console.log(this.props.user);\n    const userdb = db.collection(\"users\").doc(this.state.user.id);\n\n    if (userdb.course == '') {\n      return React.createElement(Redirect, {\n        to: '/Login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc');\n    postsref.limit(20).onSnapshot(snapshot => {\n      const posts = snapshot.docs.map(postdoc => {\n        const post = postdoc.data();\n\n        if (post.postimageurl != []) {\n          const pathref = storage.ref().child(\"images/\".concat(post.postimageurl));\n          pathref.getDownloadURL().then(url => {\n            this.setState(state => {\n              const index = state.posts.findIndex(post => {\n                return post.id === postdoc.id;\n              });\n              state.posts[index].postimageurl.push(url);\n              return state;\n            });\n          });\n        }\n\n        return _objectSpread({}, post, {\n          id: postdoc.id\n        });\n      });\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.posts);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.user && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/posts/index\",\n      render: () => React.createElement(Index, {\n        post: this.post,\n        changepost: this.changepost,\n        pictureurl: this.state.pictureurl,\n        posts: this.state.posts,\n        postpage: this.state.postpage,\n        user: this.props.user,\n        post: this.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/index/:id\",\n      render: props => React.createElement(Detail, {\n        match: props.match,\n        post: this.post,\n        changepost: this.changepost,\n        pictureurl: this.state.pictureurl,\n        posts: this.state.posts,\n        postpage: this.state.postpage,\n        user: this.props.user,\n        post: this.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Posts.js"],"names":["React","Post","db","firebase","BrowserRouter","Route","Redirect","Link","storage","Detail","Index","Posts","Component","constructor","props","changepost","setState","postpage","post","state","posts","user","pictureurl","detail","componentDidMount","auth","onAuthStateChanged","currentUser","console","log","userdb","collection","doc","id","course","postsref","orderBy","limit","onSnapshot","snapshot","docs","map","postdoc","data","postimageurl","pathref","ref","child","getDownloadURL","then","url","index","findIndex","push","render","match"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport Post from \"./Post\"\nimport { db } from '../firebase'\nimport firebase from '../firebase'\nimport { BrowserRouter, Route,Redirect, Link } from 'react-router-dom'\nimport { storage } from '../firebase'\nimport Detail from \"./Detail\"\nimport Index from \"./Index\"\n\n\n\nclass Posts extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            posts:[],\n            postpage:false,\n            user:null,\n            pictureurl:\"\",\n            detail:[]\n\n\n        }\n        \n    }\n\n    changepost=()=>{\n        this.setState({\n        postpage:false\n    })\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            this.setState({ user })\n          })\n          \n          const user = firebase.auth().currentUser\n          console.log(this.props.user)\n          const userdb = db.collection(\"users\").doc(this.state.user.id);\n           if(userdb.course=='')\n           {return<Redirect to={'/Login'}/>}\n        \n          \n        const postsref = db.collection(\"posts\").orderBy('timestamp', 'desc')\n        postsref.limit(20).onSnapshot((snapshot) => {\n            const posts = snapshot.docs.map( (postdoc) =>{\n                \n                const post = postdoc.data();\n                    \n                if(post.postimageurl != []){\n                    \n                    const pathref = storage.ref().child(`images/${post.postimageurl}`)\n                    pathref.getDownloadURL().then((url)=>{ \n\n                        this.setState((state)=>{\n                            const index =  state.posts.findIndex((post)=>{\n                                return post.id === postdoc.id;\n                            })\n                            state.posts[index].postimageurl.push(url)\n\n\n                            \n                            return state\n                        })\n                    })\n\n                    \n                }\n                return {...post,id:postdoc.id}\n                \n                \n            })\n            \n            this.setState({\n                posts : posts,\n            })\n        });\n        \n    \n    }\n\n   \n    post = () =>{\n        if(this.state.postpage==true){\n        this.setState({\n            postpage:false\n        })\n         }else{\n        this.setState({\n            postpage : true\n        })  \n    }\n    }\n\n\n    render(){\n       console.log(this.state.posts)\n        return(\n            <div>\n               \n                {this.props.user&&\n                <div>\n\n                 <Route  exact path='/posts/index' render={()=><Index post={this.post} changepost={this.changepost} pictureurl = { this.state.pictureurl} posts={this.state.posts} postpage={this.state.postpage} user ={this.props.user} post = {this.post}/>}/>\n                 <Route  path='/posts/index/:id' render={(props)=><Detail match ={props.match} post={this.post} changepost={this.changepost} pictureurl = { this.state.pictureurl} posts={this.state.posts} postpage={this.state.postpage} user ={this.props.user} post = {this.post}/>}/>\n                 \n                </div>\n                }\n           \n               \n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}