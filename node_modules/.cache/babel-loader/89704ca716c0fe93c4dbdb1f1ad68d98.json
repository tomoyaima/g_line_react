{"ast":null,"code":"var _jsxFileName = \"/Users/imatomo/Desktop/gline-react/src/components/Response.js\";\n//解答の閲覧画面のコンポーネントを編集\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nclass Response extends React.Component {\n  constructor() {\n    super();\n\n    this.handleFileSelect = e => {\n      const files = e.target.files;\n      Array.prototype.forEach.call(files, file => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n          this.setState(state => {\n            state.postimageurls.push(reader.result);\n            state.files.push(file);\n            return state;\n          });\n        });\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      });\n    };\n\n    this.state = {\n      text: \"\",\n      postimageurls: [],\n      responses: []\n    };\n    this.handleInputText = this.handleInputText.bind(this);\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  handleInputText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posttitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.Text,\n      onChange: this.handleInputText.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileSelect.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), this.state.postimageurls.map((imageurl, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    })), React.createElement(\"button\", {\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u8CEA\\u554F\\u3092\\u6295\\u7A3F\\u3059\\u308B\")));\n  }\n\n}\n\nexport default Response;","map":{"version":3,"sources":["/Users/imatomo/Desktop/gline-react/src/components/Response.js"],"names":["React","BrowserRouter","Route","Link","Response","Component","constructor","handleFileSelect","e","files","target","Array","prototype","forEach","call","file","reader","FileReader","addEventListener","setState","state","postimageurls","push","result","readAsDataURL","text","responses","handleInputText","bind","event","value","render","Text","map","imageurl","i","save"],"mappings":"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","sourcesContent":["//解答の閲覧画面のコンポーネントを編集\nimport React from \"react\";\nimport \"../bower_components/materialize/dist/css/materialize.css\";\nimport \"./style.css\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nclass Response extends React.Component{\n    constructor(){\n        super()\n        this.state={\n\n            text : \"\",\n            postimageurls:[],\n            responses:[]\n            \n         }\n         this.handleInputText = this.handleInputText.bind(this);\n         \n         this.handleFileSelect = this.handleFileSelect.bind(this);\n     }\n     \n    handleInputText(event) {\n        this.setState({\n\n            text: event.target.value\n        })\n    }\n\n\n    handleFileSelect = (e) => {\n        const files = e.target.files\n        Array.prototype.forEach.call(files,(file) => {\n            const reader = new FileReader()\n            reader.addEventListener(\"load\",()=>{\n                this.setState((state)=>{\n                    state.postimageurls.push(reader.result)\n                    state.files.push(file)\n                    return state\n                })\n\n             })\n            if(file){\n                reader.readAsDataURL(file)\n            }\n        });\n        \n    }\n\n    render(){\n        \n        return(\n            <div>\n             <div className=\"posttitle\">タイトルを入力:\n                            <input type='text' value={this.state.Text} onChange={this.handleInputText.bind(this)} />\n                        </div>\n                       \n                        <div className=\"file-field input-field\">\n                            <div className=\"btn\">\n                                <span>File</span>\n                                <input type=\"file\" onChange={this.handleFileSelect.bind(this)} multiple />\n                            </div>\n                            <div className=\"file-path-wrapper\">\n                                <input className=\"file-path validate\" type=\"text\"/>\n                            </div>\n                            {\n                                this.state.postimageurls.map((imageurl,i)=>{\n                                    return (\n                                    <div key={i}>\n                                        <img src={imageurl}></img>\n                                    </div>\n                                    )\n                                })\n                            }\n                            \n                        </div>\n                        <button onClick={this.save}  ><Link to='/posts'>質問を投稿する</Link></button>\n                        </div>\n\n                      \n        )\n    }\n}\n\nexport default Response\n"]},"metadata":{},"sourceType":"module"}